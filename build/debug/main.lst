ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB71:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "motor.h"
  25:Core/Src/main.c **** #include "math.h"
  26:Core/Src/main.c **** #include "stdlib.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** #define MAX_SPEED   700
  37:Core/Src/main.c **** const uint16_t WHITE[8] = {3057, 2769, 2764, 3069, 2887, 3000, 2950, 3020};
  38:Core/Src/main.c **** const uint16_t BLACK[8] = {3888, 3913, 3892, 3904, 3907, 3913, 3916, 3920};
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  48:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** uint32_t adc_buffer[9];
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** float Kp = 0;
  57:Core/Src/main.c **** float Ki = 0;
  58:Core/Src/main.c **** float Kd = 0;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** uint8_t multiP = 1;
  61:Core/Src/main.c **** uint8_t multiI  = 1;
  62:Core/Src/main.c **** uint8_t multiD = 1;
  63:Core/Src/main.c **** uint8_t Kpfinal;
  64:Core/Src/main.c **** uint8_t Kifinal;
  65:Core/Src/main.c **** uint8_t Kdfinal;
  66:Core/Src/main.c **** float Pvalue;
  67:Core/Src/main.c **** float Ivalue;
  68:Core/Src/main.c **** float Dvalue;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** uint16_t position;
  71:Core/Src/main.c **** int P, D, I, previousError, PIDvalue, error;
  72:Core/Src/main.c **** int lsp, rsp;
  73:Core/Src/main.c **** int lfspeed = MAX_SPEED*0.7;
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** bool adc_done_flag = false;
  76:Core/Src/main.c **** /* USER CODE END PV */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  79:Core/Src/main.c **** void SystemClock_Config(void);
  80:Core/Src/main.c **** static void MX_GPIO_Init(void);
  81:Core/Src/main.c **** static void MX_DMA_Init(void);
  82:Core/Src/main.c **** static void MX_ADC1_Init(void);
  83:Core/Src/main.c **** static void MX_TIM1_Init(void);
  84:Core/Src/main.c **** static void MX_TIM2_Init(void);
  85:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  86:Core/Src/main.c **** void Enter_Sleep(void);
  87:Core/Src/main.c **** void PID_Linefollow(int32_t error);
  88:Core/Src/main.c **** uint32_t Read_Line(void);
  89:Core/Src/main.c **** void Robot_Control(void);
  90:Core/Src/main.c **** uint16_t Normalize_Sensors(uint16_t raw, uint8_t i);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 3


  91:Core/Src/main.c **** uint8_t Get_Line(void);
  92:Core/Src/main.c **** /* USER CODE END PFP */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  95:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /* USER CODE END 0 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /**
 100:Core/Src/main.c ****   * @brief  The application entry point.
 101:Core/Src/main.c ****   * @retval int
 102:Core/Src/main.c ****   */
 103:Core/Src/main.c **** int main(void)
 104:Core/Src/main.c **** {
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END 1 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 113:Core/Src/main.c ****   HAL_Init();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END Init */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Configure the system clock */
 120:Core/Src/main.c ****   SystemClock_Config();
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE END SysInit */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Initialize all configured peripherals */
 127:Core/Src/main.c ****   MX_GPIO_Init();
 128:Core/Src/main.c ****   MX_DMA_Init();
 129:Core/Src/main.c ****   MX_ADC1_Init();
 130:Core/Src/main.c ****   MX_TIM1_Init();
 131:Core/Src/main.c ****   MX_TIM2_Init();
 132:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 133:Core/Src/main.c ****   HAL_GPIO_WritePin(BUZZ_GPIO_Port, BUZZ_Pin, GPIO_PIN_SET);
 134:Core/Src/main.c ****   HAL_Delay(300);
 135:Core/Src/main.c ****   HAL_GPIO_WritePin(BUZZ_GPIO_Port, BUZZ_Pin, GPIO_PIN_RESET);
 136:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_ON_GPIO_Port, LED_ON_Pin, GPIO_PIN_SET);
 137:Core/Src/main.c ****   HAL_GPIO_WritePin(IR_EN_GPIO_Port, IR_EN_Pin, GPIO_PIN_SET);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, adc_buffer, 9);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   M_Init();
 142:Core/Src/main.c ****   //M_SetSpeed(500, 500, FORWARD, FORWARD);
 143:Core/Src/main.c ****   // M_Disable();
 144:Core/Src/main.c ****   // Enter_Sleep();
 145:Core/Src/main.c ****   while(!HAL_GPIO_ReadPin(BTT_ON_GPIO_Port, BTT_ON_Pin));
 146:Core/Src/main.c ****   HAL_Delay(1000);
 147:Core/Src/main.c ****   /* USER CODE END 2 */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* Infinite loop */
 150:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 151:Core/Src/main.c ****   while (1)
 152:Core/Src/main.c ****   {
 153:Core/Src/main.c ****     if(adc_done_flag){
 154:Core/Src/main.c ****       adc_done_flag = false;
 155:Core/Src/main.c ****       Robot_Control();
 156:Core/Src/main.c ****       HAL_ADC_Start_DMA(&hadc1, adc_buffer, 9);
 157:Core/Src/main.c ****       if(Get_Line() == 0 || Get_Line() == 255){
 158:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_ACT_GPIO_Port, LED_ACT_Pin, GPIO_PIN_SET);
 159:Core/Src/main.c ****       }else{
 160:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_ACT_GPIO_Port, LED_ACT_Pin, GPIO_PIN_RESET);
 161:Core/Src/main.c ****       }
 162:Core/Src/main.c ****     }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****     if(HAL_GPIO_ReadPin(BTT_ON_GPIO_Port, BTT_ON_Pin)){
 165:Core/Src/main.c ****       M_Disable();
 166:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_ON_GPIO_Port, LED_ON_Pin, GPIO_PIN_RESET);
 167:Core/Src/main.c ****       HAL_GPIO_WritePin(IR_EN_GPIO_Port, IR_EN_Pin, GPIO_PIN_RESET);
 168:Core/Src/main.c ****       break;
 169:Core/Src/main.c ****     }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   //   for(;;){
 172:Core/Src/main.c ****   //   for (uint16_t i = 0; i < 800; i++){
 173:Core/Src/main.c ****   //     M_SetSpeed(i, i, FORWARD, FORWARD);
 174:Core/Src/main.c ****   //     HAL_GPIO_TogglePin(LED_ACT_GPIO_Port, LED_ACT_Pin);
 175:Core/Src/main.c ****   //     HAL_Delay(10);
 176:Core/Src/main.c ****   //   }
 177:Core/Src/main.c ****   //   HAL_Delay(1000);
 178:Core/Src/main.c ****   //   for (uint16_t i = 799; i > 0; i--){
 179:Core/Src/main.c ****   //     M_SetSpeed(i, i, FORWARD, FORWARD);
 180:Core/Src/main.c ****   //     HAL_GPIO_TogglePin(LED_ACT_GPIO_Port, LED_ACT_Pin);
 181:Core/Src/main.c ****   //     HAL_Delay(10);
 182:Core/Src/main.c ****   //   }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   //   for (uint16_t i = 0; i < 800; i++){
 185:Core/Src/main.c ****   //     M_SetSpeed(i, i, BACKWARD, BACKWARD);
 186:Core/Src/main.c ****   //     HAL_GPIO_TogglePin(LED_ACT_GPIO_Port, LED_ACT_Pin);
 187:Core/Src/main.c ****   //     HAL_Delay(10);
 188:Core/Src/main.c ****   //   }
 189:Core/Src/main.c ****   //   HAL_Delay(1000);
 190:Core/Src/main.c ****   //   for (uint16_t i = 799; i > 0; i--){
 191:Core/Src/main.c ****   //     M_SetSpeed(i, i, BACKWARD, BACKWARD);
 192:Core/Src/main.c ****   //     HAL_GPIO_TogglePin(LED_ACT_GPIO_Port, LED_ACT_Pin);
 193:Core/Src/main.c ****   //     HAL_Delay(10);
 194:Core/Src/main.c ****   //   }
 195:Core/Src/main.c ****   //   HAL_Delay(1000);
 196:Core/Src/main.c ****   // }
 197:Core/Src/main.c ****     /* USER CODE END WHILE */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c ****   /* USER CODE END 3 */
 202:Core/Src/main.c **** }
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** /**
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 5


 205:Core/Src/main.c ****   * @brief System Clock Configuration
 206:Core/Src/main.c ****   * @retval None
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c **** void SystemClock_Config(void)
 209:Core/Src/main.c **** {
 210:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 211:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 212:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 215:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 218:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 219:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     Error_Handler();
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 231:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 232:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 233:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 238:Core/Src/main.c ****   {
 239:Core/Src/main.c ****     Error_Handler();
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 242:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 243:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     Error_Handler();
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c **** }
 248:Core/Src/main.c **** 
 249:Core/Src/main.c **** /**
 250:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 251:Core/Src/main.c ****   * @param None
 252:Core/Src/main.c ****   * @retval None
 253:Core/Src/main.c ****   */
 254:Core/Src/main.c **** static void MX_ADC1_Init(void)
 255:Core/Src/main.c **** {
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /** Common config
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c ****   hadc1.Instance = ADC1;
 270:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 271:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 272:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 273:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 274:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 275:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 9;
 276:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 277:Core/Src/main.c ****   {
 278:Core/Src/main.c ****     Error_Handler();
 279:Core/Src/main.c ****   }
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /** Configure Regular Channel
 282:Core/Src/main.c ****   */
 283:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 284:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 285:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
 286:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 287:Core/Src/main.c ****   {
 288:Core/Src/main.c ****     Error_Handler();
 289:Core/Src/main.c ****   }
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /** Configure Regular Channel
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 294:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 295:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****     Error_Handler();
 298:Core/Src/main.c ****   }
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /** Configure Regular Channel
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 303:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 304:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 305:Core/Src/main.c ****   {
 306:Core/Src/main.c ****     Error_Handler();
 307:Core/Src/main.c ****   }
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /** Configure Regular Channel
 310:Core/Src/main.c ****   */
 311:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_4;
 312:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 313:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 314:Core/Src/main.c ****   {
 315:Core/Src/main.c ****     Error_Handler();
 316:Core/Src/main.c ****   }
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /** Configure Regular Channel
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 7


 319:Core/Src/main.c ****   */
 320:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 321:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 322:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     Error_Handler();
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /** Configure Regular Channel
 328:Core/Src/main.c ****   */
 329:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 330:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 331:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 332:Core/Src/main.c ****   {
 333:Core/Src/main.c ****     Error_Handler();
 334:Core/Src/main.c ****   }
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /** Configure Regular Channel
 337:Core/Src/main.c ****   */
 338:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 339:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 340:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /** Configure Regular Channel
 346:Core/Src/main.c ****   */
 347:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_8;
 348:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 349:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 350:Core/Src/main.c ****   {
 351:Core/Src/main.c ****     Error_Handler();
 352:Core/Src/main.c ****   }
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /** Configure Regular Channel
 355:Core/Src/main.c ****   */
 356:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_9;
 357:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_9;
 358:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 359:Core/Src/main.c ****   {
 360:Core/Src/main.c ****     Error_Handler();
 361:Core/Src/main.c ****   }
 362:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** }
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** /**
 369:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 370:Core/Src/main.c ****   * @param None
 371:Core/Src/main.c ****   * @retval None
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c **** static void MX_TIM1_Init(void)
 374:Core/Src/main.c **** {
 375:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 8


 376:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 381:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 382:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 383:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 388:Core/Src/main.c ****   htim1.Instance = TIM1;
 389:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 390:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 391:Core/Src/main.c ****   htim1.Init.Period = 799;
 392:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 393:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 394:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 395:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 396:Core/Src/main.c ****   {
 397:Core/Src/main.c ****     Error_Handler();
 398:Core/Src/main.c ****   }
 399:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 400:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 401:Core/Src/main.c ****   {
 402:Core/Src/main.c ****     Error_Handler();
 403:Core/Src/main.c ****   }
 404:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 405:Core/Src/main.c ****   {
 406:Core/Src/main.c ****     Error_Handler();
 407:Core/Src/main.c ****   }
 408:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 409:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 410:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 411:Core/Src/main.c ****   {
 412:Core/Src/main.c ****     Error_Handler();
 413:Core/Src/main.c ****   }
 414:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 415:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 416:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 417:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 418:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 419:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 420:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 421:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 422:Core/Src/main.c ****   {
 423:Core/Src/main.c ****     Error_Handler();
 424:Core/Src/main.c ****   }
 425:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 426:Core/Src/main.c ****   {
 427:Core/Src/main.c ****     Error_Handler();
 428:Core/Src/main.c ****   }
 429:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 430:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 431:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 432:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 9


 433:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 434:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 435:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 436:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 437:Core/Src/main.c ****   {
 438:Core/Src/main.c ****     Error_Handler();
 439:Core/Src/main.c ****   }
 440:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 443:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** }
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** /**
 448:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 449:Core/Src/main.c ****   * @param None
 450:Core/Src/main.c ****   * @retval None
 451:Core/Src/main.c ****   */
 452:Core/Src/main.c **** static void MX_TIM2_Init(void)
 453:Core/Src/main.c **** {
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 460:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 461:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 466:Core/Src/main.c ****   htim2.Instance = TIM2;
 467:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 468:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 469:Core/Src/main.c ****   htim2.Init.Period = 799;
 470:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 471:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 472:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 473:Core/Src/main.c ****   {
 474:Core/Src/main.c ****     Error_Handler();
 475:Core/Src/main.c ****   }
 476:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 477:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 478:Core/Src/main.c ****   {
 479:Core/Src/main.c ****     Error_Handler();
 480:Core/Src/main.c ****   }
 481:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 482:Core/Src/main.c ****   {
 483:Core/Src/main.c ****     Error_Handler();
 484:Core/Src/main.c ****   }
 485:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 486:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 487:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 488:Core/Src/main.c ****   {
 489:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 10


 490:Core/Src/main.c ****   }
 491:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 492:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 493:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 494:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 495:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 496:Core/Src/main.c ****   {
 497:Core/Src/main.c ****     Error_Handler();
 498:Core/Src/main.c ****   }
 499:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 500:Core/Src/main.c ****   {
 501:Core/Src/main.c ****     Error_Handler();
 502:Core/Src/main.c ****   }
 503:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 506:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 507:Core/Src/main.c **** 
 508:Core/Src/main.c **** }
 509:Core/Src/main.c **** 
 510:Core/Src/main.c **** /**
 511:Core/Src/main.c ****   * Enable DMA controller clock
 512:Core/Src/main.c ****   */
 513:Core/Src/main.c **** static void MX_DMA_Init(void)
 514:Core/Src/main.c **** {
 515:Core/Src/main.c **** 
 516:Core/Src/main.c ****   /* DMA controller clock enable */
 517:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 518:Core/Src/main.c **** 
 519:Core/Src/main.c ****   /* DMA interrupt init */
 520:Core/Src/main.c ****   /* DMA1_Channel1_IRQn interrupt configuration */
 521:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 522:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 523:Core/Src/main.c **** 
 524:Core/Src/main.c **** }
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** /**
 527:Core/Src/main.c ****   * @brief GPIO Initialization Function
 528:Core/Src/main.c ****   * @param None
 529:Core/Src/main.c ****   * @retval None
 530:Core/Src/main.c ****   */
 531:Core/Src/main.c **** static void MX_GPIO_Init(void)
 532:Core/Src/main.c **** {
  26              		.loc 1 532 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              		.cfi_def_cfa_offset 20
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              		.cfi_def_cfa_offset 48
 533:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 11


  39              		.loc 1 533 3 view .LVU1
  40              		.loc 1 533 20 is_stmt 0 view .LVU2
  41 0004 02AD     		add	r5, sp, #8
  42 0006 0024     		movs	r4, #0
  43 0008 0294     		str	r4, [sp, #8]
  44 000a 0394     		str	r4, [sp, #12]
  45 000c 0494     		str	r4, [sp, #16]
  46 000e 0594     		str	r4, [sp, #20]
 534:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 539:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  47              		.loc 1 539 3 is_stmt 1 view .LVU3
  48              	.LBB4:
  49              		.loc 1 539 3 view .LVU4
  50              		.loc 1 539 3 view .LVU5
  51 0010 1B4B     		ldr	r3, .L3
  52 0012 9A69     		ldr	r2, [r3, #24]
  53 0014 42F00402 		orr	r2, r2, #4
  54 0018 9A61     		str	r2, [r3, #24]
  55              		.loc 1 539 3 view .LVU6
  56 001a 9A69     		ldr	r2, [r3, #24]
  57 001c 02F00402 		and	r2, r2, #4
  58 0020 0092     		str	r2, [sp]
  59              		.loc 1 539 3 view .LVU7
  60 0022 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 539 3 view .LVU8
 540:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 540 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 540 3 view .LVU10
  66              		.loc 1 540 3 view .LVU11
  67 0024 9A69     		ldr	r2, [r3, #24]
  68 0026 42F00802 		orr	r2, r2, #8
  69 002a 9A61     		str	r2, [r3, #24]
  70              		.loc 1 540 3 view .LVU12
  71 002c 9B69     		ldr	r3, [r3, #24]
  72 002e 03F00803 		and	r3, r3, #8
  73 0032 0193     		str	r3, [sp, #4]
  74              		.loc 1 540 3 view .LVU13
  75 0034 019B     		ldr	r3, [sp, #4]
  76              	.LBE5:
  77              		.loc 1 540 3 view .LVU14
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 543:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, LED_ON_Pin|BUZZ_Pin|nSleep_Pin|IR_EN_Pin
  78              		.loc 1 543 3 view .LVU15
  79 0036 134E     		ldr	r6, .L3+4
  80 0038 2246     		mov	r2, r4
  81 003a 4FF47361 		mov	r1, #3888
  82 003e 3046     		mov	r0, r6
  83 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  84              	.LVL0:
 544:Core/Src/main.c ****                           |LED_ACT_Pin|LED_LOW_Pin, GPIO_PIN_RESET);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 12


 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****   /*Configure GPIO pin : BTT_ON_Pin */
 547:Core/Src/main.c ****   GPIO_InitStruct.Pin = BTT_ON_Pin;
  85              		.loc 1 547 3 view .LVU16
  86              		.loc 1 547 23 is_stmt 0 view .LVU17
  87 0044 0127     		movs	r7, #1
  88 0046 0297     		str	r7, [sp, #8]
 548:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  89              		.loc 1 548 3 is_stmt 1 view .LVU18
  90              		.loc 1 548 24 is_stmt 0 view .LVU19
  91 0048 0394     		str	r4, [sp, #12]
 549:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  92              		.loc 1 549 3 is_stmt 1 view .LVU20
  93              		.loc 1 549 24 is_stmt 0 view .LVU21
  94 004a 0494     		str	r4, [sp, #16]
 550:Core/Src/main.c ****   HAL_GPIO_Init(BTT_ON_GPIO_Port, &GPIO_InitStruct);
  95              		.loc 1 550 3 is_stmt 1 view .LVU22
  96 004c 2946     		mov	r1, r5
  97 004e 0E48     		ldr	r0, .L3+8
  98 0050 FFF7FEFF 		bl	HAL_GPIO_Init
  99              	.LVL1:
 551:Core/Src/main.c **** 
 552:Core/Src/main.c ****   /*Configure GPIO pin : nFautl_Pin */
 553:Core/Src/main.c ****   GPIO_InitStruct.Pin = nFautl_Pin;
 100              		.loc 1 553 3 view .LVU23
 101              		.loc 1 553 23 is_stmt 0 view .LVU24
 102 0054 0423     		movs	r3, #4
 103 0056 0293     		str	r3, [sp, #8]
 554:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 104              		.loc 1 554 3 is_stmt 1 view .LVU25
 105              		.loc 1 554 24 is_stmt 0 view .LVU26
 106 0058 0C4B     		ldr	r3, .L3+12
 107 005a 0393     		str	r3, [sp, #12]
 555:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 108              		.loc 1 555 3 is_stmt 1 view .LVU27
 109              		.loc 1 555 24 is_stmt 0 view .LVU28
 110 005c 0494     		str	r4, [sp, #16]
 556:Core/Src/main.c ****   HAL_GPIO_Init(nFautl_GPIO_Port, &GPIO_InitStruct);
 111              		.loc 1 556 3 is_stmt 1 view .LVU29
 112 005e 2946     		mov	r1, r5
 113 0060 3046     		mov	r0, r6
 114 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 115              	.LVL2:
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****   /*Configure GPIO pins : LED_ON_Pin BUZZ_Pin nSleep_Pin IR_EN_Pin
 559:Core/Src/main.c ****                            LED_ACT_Pin LED_LOW_Pin */
 560:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_ON_Pin|BUZZ_Pin|nSleep_Pin|IR_EN_Pin
 116              		.loc 1 560 3 view .LVU30
 117              		.loc 1 560 23 is_stmt 0 view .LVU31
 118 0066 4FF47363 		mov	r3, #3888
 119 006a 0293     		str	r3, [sp, #8]
 561:Core/Src/main.c ****                           |LED_ACT_Pin|LED_LOW_Pin;
 562:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 120              		.loc 1 562 3 is_stmt 1 view .LVU32
 121              		.loc 1 562 24 is_stmt 0 view .LVU33
 122 006c 0397     		str	r7, [sp, #12]
 563:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 13


 123              		.loc 1 563 3 is_stmt 1 view .LVU34
 124              		.loc 1 563 24 is_stmt 0 view .LVU35
 125 006e 0494     		str	r4, [sp, #16]
 564:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 126              		.loc 1 564 3 is_stmt 1 view .LVU36
 127              		.loc 1 564 25 is_stmt 0 view .LVU37
 128 0070 0223     		movs	r3, #2
 129 0072 0593     		str	r3, [sp, #20]
 565:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 130              		.loc 1 565 3 is_stmt 1 view .LVU38
 131 0074 2946     		mov	r1, r5
 132 0076 3046     		mov	r0, r6
 133 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL3:
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 570:Core/Src/main.c **** }
 135              		.loc 1 570 1 is_stmt 0 view .LVU39
 136 007c 07B0     		add	sp, sp, #28
 137              		.cfi_def_cfa_offset 20
 138              		@ sp needed
 139 007e F0BD     		pop	{r4, r5, r6, r7, pc}
 140              	.L4:
 141              		.align	2
 142              	.L3:
 143 0080 00100240 		.word	1073876992
 144 0084 000C0140 		.word	1073810432
 145 0088 00080140 		.word	1073809408
 146 008c 00001110 		.word	269549568
 147              		.cfi_endproc
 148              	.LFE71:
 150              		.section	.text.MX_DMA_Init,"ax",%progbits
 151              		.align	1
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 156              	MX_DMA_Init:
 157              	.LFB70:
 514:Core/Src/main.c **** 
 158              		.loc 1 514 1 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 8
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 00B5     		push	{lr}
 163              		.cfi_def_cfa_offset 4
 164              		.cfi_offset 14, -4
 165 0002 83B0     		sub	sp, sp, #12
 166              		.cfi_def_cfa_offset 16
 517:Core/Src/main.c **** 
 167              		.loc 1 517 3 view .LVU41
 168              	.LBB6:
 517:Core/Src/main.c **** 
 169              		.loc 1 517 3 view .LVU42
 517:Core/Src/main.c **** 
 170              		.loc 1 517 3 view .LVU43
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 14


 171 0004 0A4B     		ldr	r3, .L7
 172 0006 5A69     		ldr	r2, [r3, #20]
 173 0008 42F00102 		orr	r2, r2, #1
 174 000c 5A61     		str	r2, [r3, #20]
 517:Core/Src/main.c **** 
 175              		.loc 1 517 3 view .LVU44
 176 000e 5B69     		ldr	r3, [r3, #20]
 177 0010 03F00103 		and	r3, r3, #1
 178 0014 0193     		str	r3, [sp, #4]
 517:Core/Src/main.c **** 
 179              		.loc 1 517 3 view .LVU45
 180 0016 019B     		ldr	r3, [sp, #4]
 181              	.LBE6:
 517:Core/Src/main.c **** 
 182              		.loc 1 517 3 view .LVU46
 521:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 183              		.loc 1 521 3 view .LVU47
 184 0018 0022     		movs	r2, #0
 185 001a 1146     		mov	r1, r2
 186 001c 0B20     		movs	r0, #11
 187 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 188              	.LVL4:
 522:Core/Src/main.c **** 
 189              		.loc 1 522 3 view .LVU48
 190 0022 0B20     		movs	r0, #11
 191 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 192              	.LVL5:
 524:Core/Src/main.c **** 
 193              		.loc 1 524 1 is_stmt 0 view .LVU49
 194 0028 03B0     		add	sp, sp, #12
 195              		.cfi_def_cfa_offset 4
 196              		@ sp needed
 197 002a 5DF804FB 		ldr	pc, [sp], #4
 198              	.L8:
 199 002e 00BF     		.align	2
 200              	.L7:
 201 0030 00100240 		.word	1073876992
 202              		.cfi_endproc
 203              	.LFE70:
 205              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 206              		.align	1
 207              		.global	HAL_ADC_ConvCpltCallback
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	HAL_ADC_ConvCpltCallback:
 213              	.LVL6:
 214              	.LFB72:
 571:Core/Src/main.c **** 
 572:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 573:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
 574:Core/Src/main.c **** {
 215              		.loc 1 574 1 is_stmt 1 view -0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              		.loc 1 574 1 is_stmt 0 view .LVU51
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 15


 220 0000 08B5     		push	{r3, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 3, -8
 223              		.cfi_offset 14, -4
 575:Core/Src/main.c ****   if(hadc->Instance == ADC1){
 224              		.loc 1 575 3 is_stmt 1 view .LVU52
 225              		.loc 1 575 10 is_stmt 0 view .LVU53
 226 0002 0268     		ldr	r2, [r0]
 227              		.loc 1 575 5 view .LVU54
 228 0004 1C4B     		ldr	r3, .L17+24
 229 0006 9A42     		cmp	r2, r3
 230 0008 00D0     		beq	.L16
 231              	.LVL7:
 232              	.L9:
 576:Core/Src/main.c ****     adc_done_flag = true;
 577:Core/Src/main.c ****     float voltage = adc_buffer[0] * 3.3 / 4095;
 578:Core/Src/main.c ****     if(voltage < (5.4 / 4)){
 579:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_LOW_GPIO_Port, LED_LOW_Pin, GPIO_PIN_SET);
 580:Core/Src/main.c ****     }else{
 581:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_LOW_GPIO_Port, LED_LOW_Pin, GPIO_PIN_RESET);
 582:Core/Src/main.c ****     }
 583:Core/Src/main.c ****   }
 584:Core/Src/main.c **** }
 233              		.loc 1 584 1 view .LVU55
 234 000a 08BD     		pop	{r3, pc}
 235              	.LVL8:
 236              	.L16:
 237              	.LBB7:
 576:Core/Src/main.c ****     adc_done_flag = true;
 238              		.loc 1 576 5 is_stmt 1 view .LVU56
 576:Core/Src/main.c ****     adc_done_flag = true;
 239              		.loc 1 576 19 is_stmt 0 view .LVU57
 240 000c 1B4B     		ldr	r3, .L17+28
 241 000e 0122     		movs	r2, #1
 242 0010 1A70     		strb	r2, [r3]
 577:Core/Src/main.c ****     if(voltage < (5.4 / 4)){
 243              		.loc 1 577 5 is_stmt 1 view .LVU58
 577:Core/Src/main.c ****     if(voltage < (5.4 / 4)){
 244              		.loc 1 577 35 is_stmt 0 view .LVU59
 245 0012 1B4B     		ldr	r3, .L17+32
 246 0014 1868     		ldr	r0, [r3]
 247              	.LVL9:
 577:Core/Src/main.c ****     if(voltage < (5.4 / 4)){
 248              		.loc 1 577 35 view .LVU60
 249 0016 FFF7FEFF 		bl	__aeabi_ui2d
 250              	.LVL10:
 251 001a 11A3     		adr	r3, .L17
 252 001c D3E90023 		ldrd	r2, [r3]
 253 0020 FFF7FEFF 		bl	__aeabi_dmul
 254              	.LVL11:
 577:Core/Src/main.c ****     if(voltage < (5.4 / 4)){
 255              		.loc 1 577 41 view .LVU61
 256 0024 10A3     		adr	r3, .L17+8
 257 0026 D3E90023 		ldrd	r2, [r3]
 258 002a FFF7FEFF 		bl	__aeabi_ddiv
 259              	.LVL12:
 577:Core/Src/main.c ****     if(voltage < (5.4 / 4)){
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 16


 260              		.loc 1 577 11 view .LVU62
 261 002e FFF7FEFF 		bl	__aeabi_d2f
 262              	.LVL13:
 578:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_LOW_GPIO_Port, LED_LOW_Pin, GPIO_PIN_SET);
 263              		.loc 1 578 5 is_stmt 1 view .LVU63
 578:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_LOW_GPIO_Port, LED_LOW_Pin, GPIO_PIN_SET);
 264              		.loc 1 578 16 is_stmt 0 view .LVU64
 265 0032 FFF7FEFF 		bl	__aeabi_f2d
 266              	.LVL14:
 578:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_LOW_GPIO_Port, LED_LOW_Pin, GPIO_PIN_SET);
 267              		.loc 1 578 7 view .LVU65
 268 0036 0EA3     		adr	r3, .L17+16
 269 0038 D3E90023 		ldrd	r2, [r3]
 270 003c FFF7FEFF 		bl	__aeabi_dcmplt
 271              	.LVL15:
 272 0040 30B1     		cbz	r0, .L14
 579:Core/Src/main.c ****     }else{
 273              		.loc 1 579 7 is_stmt 1 view .LVU66
 274 0042 0122     		movs	r2, #1
 275 0044 4FF40071 		mov	r1, #512
 276 0048 0E48     		ldr	r0, .L17+36
 277 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 278              	.LVL16:
 279 004e DCE7     		b	.L9
 280              	.L14:
 581:Core/Src/main.c ****     }
 281              		.loc 1 581 7 view .LVU67
 282 0050 0022     		movs	r2, #0
 283 0052 4FF40071 		mov	r1, #512
 284 0056 0B48     		ldr	r0, .L17+36
 285 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 286              	.LVL17:
 287              	.LBE7:
 288              		.loc 1 584 1 is_stmt 0 view .LVU68
 289 005c D5E7     		b	.L9
 290              	.L18:
 291 005e 00BF     		.align	3
 292              	.L17:
 293 0060 66666666 		.word	1717986918
 294 0064 66660A40 		.word	1074423398
 295 0068 00000000 		.word	0
 296 006c 00FEAF40 		.word	1085275648
 297 0070 9A999999 		.word	-1717986918
 298 0074 9999F53F 		.word	1073060249
 299 0078 00240140 		.word	1073816576
 300 007c 00000000 		.word	adc_done_flag
 301 0080 00000000 		.word	adc_buffer
 302 0084 000C0140 		.word	1073810432
 303              		.cfi_endproc
 304              	.LFE72:
 306              		.section	.text.Enter_Sleep,"ax",%progbits
 307              		.align	1
 308              		.global	Enter_Sleep
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 313              	Enter_Sleep:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 17


 314              	.LFB73:
 585:Core/Src/main.c **** 
 586:Core/Src/main.c **** // void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 587:Core/Src/main.c **** // {
 588:Core/Src/main.c **** //   if(GPIO_Pin == GPIO_PIN_0) {
 589:Core/Src/main.c **** //     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 590:Core/Src/main.c **** //   } else {
 591:Core/Src/main.c **** //       __NOP();
 592:Core/Src/main.c **** //   }
 593:Core/Src/main.c **** // }
 594:Core/Src/main.c **** 
 595:Core/Src/main.c **** void Enter_Sleep(void){
 315              		.loc 1 595 23 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319 0000 10B5     		push	{r4, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 4, -8
 322              		.cfi_offset 14, -4
 596:Core/Src/main.c ****   HAL_GPIO_WritePin(IR_EN_GPIO_Port, IR_EN_Pin, GPIO_PIN_RESET);
 323              		.loc 1 596 3 view .LVU70
 324 0002 0D4C     		ldr	r4, .L21
 325 0004 0022     		movs	r2, #0
 326 0006 2021     		movs	r1, #32
 327 0008 2046     		mov	r0, r4
 328 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 329              	.LVL18:
 597:Core/Src/main.c ****   M_Disable();
 330              		.loc 1 597 3 view .LVU71
 331 000e FFF7FEFF 		bl	M_Disable
 332              	.LVL19:
 598:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_ACT_GPIO_Port, LED_ACT_Pin, GPIO_PIN_RESET);
 333              		.loc 1 598 3 view .LVU72
 334 0012 0022     		movs	r2, #0
 335 0014 4FF48071 		mov	r1, #256
 336 0018 2046     		mov	r0, r4
 337 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 338              	.LVL20:
 599:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_ON_GPIO_Port, LED_ON_Pin, GPIO_PIN_RESET);
 339              		.loc 1 599 3 view .LVU73
 340 001e 0022     		movs	r2, #0
 341 0020 4FF48061 		mov	r1, #1024
 342 0024 2046     		mov	r0, r4
 343 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 344              	.LVL21:
 600:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_LOW_GPIO_Port, LED_LOW_Pin, GPIO_PIN_RESET);
 345              		.loc 1 600 3 view .LVU74
 346 002a 0022     		movs	r2, #0
 347 002c 4FF40071 		mov	r1, #512
 348 0030 2046     		mov	r0, r4
 349 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 350              	.LVL22:
 601:Core/Src/main.c **** }
 351              		.loc 1 601 1 is_stmt 0 view .LVU75
 352 0036 10BD     		pop	{r4, pc}
 353              	.L22:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 18


 354              		.align	2
 355              	.L21:
 356 0038 000C0140 		.word	1073810432
 357              		.cfi_endproc
 358              	.LFE73:
 360              		.section	.text.Get_Line,"ax",%progbits
 361              		.align	1
 362              		.global	Get_Line
 363              		.syntax unified
 364              		.thumb
 365              		.thumb_func
 367              	Get_Line:
 368              	.LFB75:
 602:Core/Src/main.c **** 
 603:Core/Src/main.c **** void Robot_Control(void){
 604:Core/Src/main.c **** 
 605:Core/Src/main.c ****   position = Read_Line();
 606:Core/Src/main.c ****   error = 3500 - position;
 607:Core/Src/main.c ****   while(Get_Line() == 0){
 608:Core/Src/main.c ****     if(previousError<0){      
 609:Core/Src/main.c ****       M_SetSpeed(0.7*MAX_SPEED, 0.7*MAX_SPEED, BACKWARD, FORWARD);
 610:Core/Src/main.c ****     }
 611:Core/Src/main.c ****     else{
 612:Core/Src/main.c ****       M_SetSpeed(0.7*MAX_SPEED, 0.7*MAX_SPEED, FORWARD, BACKWARD);
 613:Core/Src/main.c ****     }
 614:Core/Src/main.c ****     adc_done_flag = false;
 615:Core/Src/main.c ****     HAL_ADC_Start_DMA(&hadc1, adc_buffer, 9);
 616:Core/Src/main.c ****     while(!adc_done_flag);
 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****     position = Read_Line();
 619:Core/Src/main.c ****   }
 620:Core/Src/main.c **** 
 621:Core/Src/main.c ****   PID_Linefollow(error);
 622:Core/Src/main.c **** }
 623:Core/Src/main.c **** 
 624:Core/Src/main.c **** uint8_t Get_Line(void){
 369              		.loc 1 624 23 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 374              		.cfi_def_cfa_offset 32
 375              		.cfi_offset 4, -32
 376              		.cfi_offset 5, -28
 377              		.cfi_offset 6, -24
 378              		.cfi_offset 7, -20
 379              		.cfi_offset 8, -16
 380              		.cfi_offset 9, -12
 381              		.cfi_offset 10, -8
 382              		.cfi_offset 14, -4
 625:Core/Src/main.c ****   uint8_t out = 0;
 383              		.loc 1 625 3 view .LVU77
 384              	.LVL23:
 626:Core/Src/main.c ****   for (uint8_t i = 0; i < 8; i++){
 385              		.loc 1 626 3 view .LVU78
 386              	.LBB8:
 387              		.loc 1 626 8 view .LVU79
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 19


 388              		.loc 1 626 16 is_stmt 0 view .LVU80
 389 0004 0024     		movs	r4, #0
 390              	.LBE8:
 625:Core/Src/main.c ****   uint8_t out = 0;
 391              		.loc 1 625 11 view .LVU81
 392 0006 2546     		mov	r5, r4
 393              	.LBB9:
 394              		.loc 1 626 3 view .LVU82
 395 0008 01E0     		b	.L24
 396              	.LVL24:
 397              	.L25:
 398              		.loc 1 626 31 is_stmt 1 discriminator 2 view .LVU83
 399 000a 0134     		adds	r4, r4, #1
 400              	.LVL25:
 401              		.loc 1 626 31 is_stmt 0 discriminator 2 view .LVU84
 402 000c E4B2     		uxtb	r4, r4
 403              	.LVL26:
 404              	.L24:
 405              		.loc 1 626 25 is_stmt 1 discriminator 1 view .LVU85
 406 000e 072C     		cmp	r4, #7
 407 0010 2BD8     		bhi	.L30
 627:Core/Src/main.c ****     if(adc_buffer[i+1] > (BLACK[i] - (BLACK[i]-WHITE[i])*0.5)){
 408              		.loc 1 627 5 view .LVU86
 409              		.loc 1 627 20 is_stmt 0 view .LVU87
 410 0012 631C     		adds	r3, r4, #1
 411              		.loc 1 627 24 view .LVU88
 412 0014 164A     		ldr	r2, .L31
 413 0016 52F82300 		ldr	r0, [r2, r3, lsl #2]
 414 001a FFF7FEFF 		bl	__aeabi_ui2d
 415              	.LVL27:
 416 001e 0646     		mov	r6, r0
 417 0020 0F46     		mov	r7, r1
 418              		.loc 1 627 32 view .LVU89
 419 0022 144B     		ldr	r3, .L31+4
 420 0024 33F814A0 		ldrh	r10, [r3, r4, lsl #1]
 421              		.loc 1 627 53 view .LVU90
 422 0028 134B     		ldr	r3, .L31+8
 423 002a 33F81400 		ldrh	r0, [r3, r4, lsl #1]
 424              		.loc 1 627 57 view .LVU91
 425 002e AAEB0000 		sub	r0, r10, r0
 426 0032 FFF7FEFF 		bl	__aeabi_i2d
 427              	.LVL28:
 428 0036 0022     		movs	r2, #0
 429 0038 104B     		ldr	r3, .L31+12
 430 003a FFF7FEFF 		bl	__aeabi_dmul
 431              	.LVL29:
 432 003e 8046     		mov	r8, r0
 433 0040 8946     		mov	r9, r1
 434              		.loc 1 627 36 view .LVU92
 435 0042 5046     		mov	r0, r10
 436 0044 FFF7FEFF 		bl	__aeabi_i2d
 437              	.LVL30:
 438 0048 4246     		mov	r2, r8
 439 004a 4B46     		mov	r3, r9
 440 004c FFF7FEFF 		bl	__aeabi_dsub
 441              	.LVL31:
 442 0050 0246     		mov	r2, r0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 20


 443 0052 0B46     		mov	r3, r1
 444              		.loc 1 627 7 view .LVU93
 445 0054 3046     		mov	r0, r6
 446 0056 3946     		mov	r1, r7
 447 0058 FFF7FEFF 		bl	__aeabi_dcmpgt
 448              	.LVL32:
 449 005c 0028     		cmp	r0, #0
 450 005e D4D0     		beq	.L25
 628:Core/Src/main.c ****       out = out | (1 << i);
 451              		.loc 1 628 7 is_stmt 1 view .LVU94
 452              		.loc 1 628 22 is_stmt 0 view .LVU95
 453 0060 0120     		movs	r0, #1
 454 0062 A040     		lsls	r0, r0, r4
 455              		.loc 1 628 11 view .LVU96
 456 0064 2843     		orrs	r0, r0, r5
 457 0066 C5B2     		uxtb	r5, r0
 458              	.LVL33:
 459              		.loc 1 628 11 view .LVU97
 460 0068 CFE7     		b	.L25
 461              	.LVL34:
 462              	.L30:
 463              		.loc 1 628 11 view .LVU98
 464              	.LBE9:
 629:Core/Src/main.c ****     }
 630:Core/Src/main.c ****   }
 631:Core/Src/main.c ****   return out;
 465              		.loc 1 631 3 is_stmt 1 view .LVU99
 632:Core/Src/main.c **** }
 466              		.loc 1 632 1 is_stmt 0 view .LVU100
 467 006a 2846     		mov	r0, r5
 468 006c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 469              	.LVL35:
 470              	.L32:
 471              		.loc 1 632 1 view .LVU101
 472              		.align	2
 473              	.L31:
 474 0070 00000000 		.word	adc_buffer
 475 0074 00000000 		.word	BLACK
 476 0078 00000000 		.word	WHITE
 477 007c 0000E03F 		.word	1071644672
 478              		.cfi_endproc
 479              	.LFE75:
 481              		.section	.text.PID_Linefollow,"ax",%progbits
 482              		.align	1
 483              		.global	PID_Linefollow
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 488              	PID_Linefollow:
 489              	.LVL36:
 490              	.LFB77:
 633:Core/Src/main.c **** 
 634:Core/Src/main.c **** uint32_t Read_Line(void){
 635:Core/Src/main.c ****     uint32_t avg = 0;
 636:Core/Src/main.c ****     uint32_t sum = 0;
 637:Core/Src/main.c **** 
 638:Core/Src/main.c ****     for (uint8_t i = 0; i < 8; i++) {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 21


 639:Core/Src/main.c ****         uint16_t value = Normalize_Sensors(adc_buffer[i+1], i);  // ADC value for sensor i
 640:Core/Src/main.c ****         avg += (uint32_t)value * (i * 1000);
 641:Core/Src/main.c ****         sum += value;
 642:Core/Src/main.c ****     }
 643:Core/Src/main.c **** 
 644:Core/Src/main.c ****     if (sum == 0) return 0;  // no line detected
 645:Core/Src/main.c ****     return avg / sum;        // 0 … 7000
 646:Core/Src/main.c **** }
 647:Core/Src/main.c **** 
 648:Core/Src/main.c **** void PID_Linefollow(int32_t error){
 491              		.loc 1 648 35 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 8
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		.loc 1 648 35 is_stmt 0 view .LVU103
 496 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 497              		.cfi_def_cfa_offset 36
 498              		.cfi_offset 4, -36
 499              		.cfi_offset 5, -32
 500              		.cfi_offset 6, -28
 501              		.cfi_offset 7, -24
 502              		.cfi_offset 8, -20
 503              		.cfi_offset 9, -16
 504              		.cfi_offset 10, -12
 505              		.cfi_offset 11, -8
 506              		.cfi_offset 14, -4
 507 0004 83B0     		sub	sp, sp, #12
 508              		.cfi_def_cfa_offset 48
 509 0006 0446     		mov	r4, r0
 649:Core/Src/main.c ****     P = error;
 510              		.loc 1 649 5 is_stmt 1 view .LVU104
 511              		.loc 1 649 7 is_stmt 0 view .LVU105
 512 0008 694B     		ldr	r3, .L39
 513 000a 1860     		str	r0, [r3]
 650:Core/Src/main.c ****     I = I + error;
 514              		.loc 1 650 5 is_stmt 1 view .LVU106
 515              		.loc 1 650 11 is_stmt 0 view .LVU107
 516 000c 694B     		ldr	r3, .L39+4
 517 000e 1E68     		ldr	r6, [r3]
 518 0010 0644     		add	r6, r6, r0
 519              		.loc 1 650 7 view .LVU108
 520 0012 1E60     		str	r6, [r3]
 651:Core/Src/main.c ****     D = error - previousError;
 521              		.loc 1 651 5 is_stmt 1 view .LVU109
 522              		.loc 1 651 15 is_stmt 0 view .LVU110
 523 0014 684F     		ldr	r7, .L39+8
 524 0016 3D68     		ldr	r5, [r7]
 525 0018 451B     		subs	r5, r0, r5
 526              		.loc 1 651 7 view .LVU111
 527 001a 684B     		ldr	r3, .L39+12
 528 001c 1D60     		str	r5, [r3]
 652:Core/Src/main.c ****     
 653:Core/Src/main.c ****     Pvalue = (Kp/pow(10,multiP))*P;
 529              		.loc 1 653 5 is_stmt 1 view .LVU112
 530              		.loc 1 653 17 is_stmt 0 view .LVU113
 531 001e 684B     		ldr	r3, .L39+16
 532 0020 1868     		ldr	r0, [r3]	@ float
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 22


 533              	.LVL37:
 534              		.loc 1 653 17 view .LVU114
 535 0022 FFF7FEFF 		bl	__aeabi_f2d
 536              	.LVL38:
 537 0026 8046     		mov	r8, r0
 538 0028 8946     		mov	r9, r1
 539              		.loc 1 653 18 view .LVU115
 540 002a 664B     		ldr	r3, .L39+20
 541 002c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 542 002e FFF7FEFF 		bl	__aeabi_ui2d
 543              	.LVL39:
 544 0032 0246     		mov	r2, r0
 545 0034 0B46     		mov	r3, r1
 546 0036 4FF0000A 		mov	r10, #0
 547 003a DFF88CB1 		ldr	fp, .L39+24
 548 003e 5046     		mov	r0, r10
 549 0040 5946     		mov	r1, fp
 550 0042 FFF7FEFF 		bl	pow
 551              	.LVL40:
 552 0046 0246     		mov	r2, r0
 553 0048 0B46     		mov	r3, r1
 554              		.loc 1 653 17 discriminator 1 view .LVU116
 555 004a 4046     		mov	r0, r8
 556 004c 4946     		mov	r1, r9
 557 004e FFF7FEFF 		bl	__aeabi_ddiv
 558              	.LVL41:
 559 0052 8046     		mov	r8, r0
 560 0054 8946     		mov	r9, r1
 561              		.loc 1 653 33 discriminator 1 view .LVU117
 562 0056 2046     		mov	r0, r4
 563 0058 FFF7FEFF 		bl	__aeabi_i2d
 564              	.LVL42:
 565 005c 4246     		mov	r2, r8
 566 005e 4B46     		mov	r3, r9
 567 0060 FFF7FEFF 		bl	__aeabi_dmul
 568              	.LVL43:
 569 0064 FFF7FEFF 		bl	__aeabi_d2f
 570              	.LVL44:
 571              		.loc 1 653 12 discriminator 1 view .LVU118
 572 0068 584B     		ldr	r3, .L39+28
 573 006a 0190     		str	r0, [sp, #4]	@ float
 574 006c 1860     		str	r0, [r3]	@ float
 654:Core/Src/main.c ****     Ivalue = (Ki/pow(10,multiI))*I;
 575              		.loc 1 654 5 is_stmt 1 view .LVU119
 576              		.loc 1 654 17 is_stmt 0 view .LVU120
 577 006e 584B     		ldr	r3, .L39+32
 578 0070 1868     		ldr	r0, [r3]	@ float
 579 0072 FFF7FEFF 		bl	__aeabi_f2d
 580              	.LVL45:
 581 0076 8046     		mov	r8, r0
 582 0078 8946     		mov	r9, r1
 583              		.loc 1 654 18 view .LVU121
 584 007a 564B     		ldr	r3, .L39+36
 585 007c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 586 007e FFF7FEFF 		bl	__aeabi_ui2d
 587              	.LVL46:
 588 0082 0246     		mov	r2, r0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 23


 589 0084 0B46     		mov	r3, r1
 590 0086 5046     		mov	r0, r10
 591 0088 5946     		mov	r1, fp
 592 008a FFF7FEFF 		bl	pow
 593              	.LVL47:
 594 008e 0246     		mov	r2, r0
 595 0090 0B46     		mov	r3, r1
 596              		.loc 1 654 17 discriminator 1 view .LVU122
 597 0092 4046     		mov	r0, r8
 598 0094 4946     		mov	r1, r9
 599 0096 FFF7FEFF 		bl	__aeabi_ddiv
 600              	.LVL48:
 601 009a 8046     		mov	r8, r0
 602 009c 8946     		mov	r9, r1
 603              		.loc 1 654 33 discriminator 1 view .LVU123
 604 009e 3046     		mov	r0, r6
 605 00a0 FFF7FEFF 		bl	__aeabi_i2d
 606              	.LVL49:
 607 00a4 4246     		mov	r2, r8
 608 00a6 4B46     		mov	r3, r9
 609 00a8 FFF7FEFF 		bl	__aeabi_dmul
 610              	.LVL50:
 611 00ac FFF7FEFF 		bl	__aeabi_d2f
 612              	.LVL51:
 613 00b0 0646     		mov	r6, r0
 614              		.loc 1 654 12 discriminator 1 view .LVU124
 615 00b2 494B     		ldr	r3, .L39+40
 616 00b4 1860     		str	r0, [r3]	@ float
 655:Core/Src/main.c ****     Dvalue = (Kd/pow(10,multiD))*D; 
 617              		.loc 1 655 5 is_stmt 1 view .LVU125
 618              		.loc 1 655 17 is_stmt 0 view .LVU126
 619 00b6 494B     		ldr	r3, .L39+44
 620 00b8 1868     		ldr	r0, [r3]	@ float
 621 00ba FFF7FEFF 		bl	__aeabi_f2d
 622              	.LVL52:
 623 00be 8046     		mov	r8, r0
 624 00c0 8946     		mov	r9, r1
 625              		.loc 1 655 18 view .LVU127
 626 00c2 474B     		ldr	r3, .L39+48
 627 00c4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 628 00c6 FFF7FEFF 		bl	__aeabi_ui2d
 629              	.LVL53:
 630 00ca 0246     		mov	r2, r0
 631 00cc 0B46     		mov	r3, r1
 632 00ce 5046     		mov	r0, r10
 633 00d0 5946     		mov	r1, fp
 634 00d2 FFF7FEFF 		bl	pow
 635              	.LVL54:
 636 00d6 0246     		mov	r2, r0
 637 00d8 0B46     		mov	r3, r1
 638              		.loc 1 655 17 discriminator 1 view .LVU128
 639 00da 4046     		mov	r0, r8
 640 00dc 4946     		mov	r1, r9
 641 00de FFF7FEFF 		bl	__aeabi_ddiv
 642              	.LVL55:
 643 00e2 8046     		mov	r8, r0
 644 00e4 8946     		mov	r9, r1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 24


 645              		.loc 1 655 33 discriminator 1 view .LVU129
 646 00e6 2846     		mov	r0, r5
 647 00e8 FFF7FEFF 		bl	__aeabi_i2d
 648              	.LVL56:
 649 00ec 4246     		mov	r2, r8
 650 00ee 4B46     		mov	r3, r9
 651 00f0 FFF7FEFF 		bl	__aeabi_dmul
 652              	.LVL57:
 653 00f4 FFF7FEFF 		bl	__aeabi_d2f
 654              	.LVL58:
 655 00f8 0546     		mov	r5, r0
 656              		.loc 1 655 12 discriminator 1 view .LVU130
 657 00fa 3A4B     		ldr	r3, .L39+52
 658 00fc 1860     		str	r0, [r3]	@ float
 656:Core/Src/main.c **** 
 657:Core/Src/main.c ****     float PIDvalue = Pvalue + Ivalue + Dvalue;
 659              		.loc 1 657 5 is_stmt 1 view .LVU131
 660              		.loc 1 657 29 is_stmt 0 view .LVU132
 661 00fe 3146     		mov	r1, r6
 662 0100 0198     		ldr	r0, [sp, #4]	@ float
 663 0102 FFF7FEFF 		bl	__aeabi_fadd
 664              	.LVL59:
 665 0106 0146     		mov	r1, r0
 666              		.loc 1 657 11 view .LVU133
 667 0108 2846     		mov	r0, r5
 668 010a FFF7FEFF 		bl	__aeabi_fadd
 669              	.LVL60:
 670 010e 0546     		mov	r5, r0
 671              	.LVL61:
 658:Core/Src/main.c ****     previousError = error;
 672              		.loc 1 658 5 is_stmt 1 view .LVU134
 673              		.loc 1 658 19 is_stmt 0 view .LVU135
 674 0110 3C60     		str	r4, [r7]
 659:Core/Src/main.c **** 
 660:Core/Src/main.c ****     lsp = lfspeed - PIDvalue;
 675              		.loc 1 660 5 is_stmt 1 view .LVU136
 676              		.loc 1 660 19 is_stmt 0 view .LVU137
 677 0112 354B     		ldr	r3, .L39+56
 678 0114 1868     		ldr	r0, [r3]
 679              	.LVL62:
 680              		.loc 1 660 19 view .LVU138
 681 0116 FFF7FEFF 		bl	__aeabi_i2f
 682              	.LVL63:
 683 011a 0646     		mov	r6, r0
 684 011c 2946     		mov	r1, r5
 685 011e FFF7FEFF 		bl	__aeabi_fsub
 686              	.LVL64:
 687              		.loc 1 660 9 view .LVU139
 688 0122 FFF7FEFF 		bl	__aeabi_f2iz
 689              	.LVL65:
 690 0126 0446     		mov	r4, r0
 691              	.LVL66:
 692              		.loc 1 660 9 view .LVU140
 693 0128 304B     		ldr	r3, .L39+60
 694 012a 1860     		str	r0, [r3]
 661:Core/Src/main.c ****     rsp = lfspeed + PIDvalue;
 695              		.loc 1 661 5 is_stmt 1 view .LVU141
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 25


 696              		.loc 1 661 19 is_stmt 0 view .LVU142
 697 012c 2946     		mov	r1, r5
 698 012e 3046     		mov	r0, r6
 699 0130 FFF7FEFF 		bl	__aeabi_fadd
 700              	.LVL67:
 701              		.loc 1 661 9 view .LVU143
 702 0134 FFF7FEFF 		bl	__aeabi_f2iz
 703              	.LVL68:
 704 0138 2D4B     		ldr	r3, .L39+64
 705 013a 1860     		str	r0, [r3]
 662:Core/Src/main.c **** 
 663:Core/Src/main.c ****     if (lsp > MAX_SPEED) {
 706              		.loc 1 663 5 is_stmt 1 view .LVU144
 707              		.loc 1 663 8 is_stmt 0 view .LVU145
 708 013c B4F52F7F 		cmp	r4, #700
 709 0140 03DD     		ble	.L34
 664:Core/Src/main.c ****       lsp = MAX_SPEED;
 710              		.loc 1 664 7 is_stmt 1 view .LVU146
 711              		.loc 1 664 11 is_stmt 0 view .LVU147
 712 0142 2A4B     		ldr	r3, .L39+60
 713 0144 4FF42F72 		mov	r2, #700
 714 0148 1A60     		str	r2, [r3]
 715              	.L34:
 665:Core/Src/main.c ****     }
 666:Core/Src/main.c ****     if (lsp < -MAX_SPEED) {
 716              		.loc 1 666 5 is_stmt 1 view .LVU148
 717              		.loc 1 666 13 is_stmt 0 view .LVU149
 718 014a 284B     		ldr	r3, .L39+60
 719 014c 1B68     		ldr	r3, [r3]
 720              		.loc 1 666 8 view .LVU150
 721 014e 13F52F7F 		cmn	r3, #700
 722 0152 02DA     		bge	.L35
 667:Core/Src/main.c ****       lsp = -MAX_SPEED;
 723              		.loc 1 667 7 is_stmt 1 view .LVU151
 724              		.loc 1 667 11 is_stmt 0 view .LVU152
 725 0154 254B     		ldr	r3, .L39+60
 726 0156 274A     		ldr	r2, .L39+68
 727 0158 1A60     		str	r2, [r3]
 728              	.L35:
 668:Core/Src/main.c ****     }
 669:Core/Src/main.c ****     
 670:Core/Src/main.c ****     if (rsp > MAX_SPEED) {
 729              		.loc 1 670 5 is_stmt 1 view .LVU153
 730              		.loc 1 670 8 is_stmt 0 view .LVU154
 731 015a B0F52F7F 		cmp	r0, #700
 732 015e 03DD     		ble	.L36
 671:Core/Src/main.c ****       rsp = MAX_SPEED;
 733              		.loc 1 671 7 is_stmt 1 view .LVU155
 734              		.loc 1 671 11 is_stmt 0 view .LVU156
 735 0160 234B     		ldr	r3, .L39+64
 736 0162 4FF42F72 		mov	r2, #700
 737 0166 1A60     		str	r2, [r3]
 738              	.L36:
 672:Core/Src/main.c ****     }
 673:Core/Src/main.c ****     if (rsp < -MAX_SPEED) {
 739              		.loc 1 673 5 is_stmt 1 view .LVU157
 740              		.loc 1 673 13 is_stmt 0 view .LVU158
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 26


 741 0168 214B     		ldr	r3, .L39+64
 742 016a 1B68     		ldr	r3, [r3]
 743              		.loc 1 673 8 view .LVU159
 744 016c 13F52F7F 		cmn	r3, #700
 745 0170 02DA     		bge	.L37
 674:Core/Src/main.c ****       rsp = -MAX_SPEED;
 746              		.loc 1 674 7 is_stmt 1 view .LVU160
 747              		.loc 1 674 11 is_stmt 0 view .LVU161
 748 0172 1F4B     		ldr	r3, .L39+64
 749 0174 1F4A     		ldr	r2, .L39+68
 750 0176 1A60     		str	r2, [r3]
 751              	.L37:
 675:Core/Src/main.c ****     }
 676:Core/Src/main.c **** 
 677:Core/Src/main.c ****     bool dir_a, dir_b;
 752              		.loc 1 677 5 is_stmt 1 view .LVU162
 678:Core/Src/main.c ****     dir_a = rsp > 0 ? FORWARD : BACKWARD;
 753              		.loc 1 678 5 view .LVU163
 754 0178 1D4B     		ldr	r3, .L39+64
 755 017a 1A68     		ldr	r2, [r3]
 756              	.LVL69:
 679:Core/Src/main.c ****     dir_b = lsp > 0 ? FORWARD : BACKWARD;
 757              		.loc 1 679 5 view .LVU164
 758 017c 1B4B     		ldr	r3, .L39+60
 759 017e 1B68     		ldr	r3, [r3]
 760              	.LVL70:
 680:Core/Src/main.c **** 
 681:Core/Src/main.c ****     M_SetSpeed(abs(rsp), abs(lsp), dir_a, dir_b);
 761              		.loc 1 681 5 view .LVU165
 762              		.loc 1 681 16 is_stmt 0 view .LVU166
 763 0180 82EAE270 		eor	r0, r2, r2, asr #31
 764 0184 A0EBE270 		sub	r0, r0, r2, asr #31
 765              		.loc 1 681 26 view .LVU167
 766 0188 83EAE371 		eor	r1, r3, r3, asr #31
 767 018c A1EBE371 		sub	r1, r1, r3, asr #31
 768              		.loc 1 681 5 view .LVU168
 769 0190 002B     		cmp	r3, #0
 770 0192 D4BF     		ite	le
 771 0194 0023     		movle	r3, #0
 772              	.LVL71:
 773              		.loc 1 681 5 view .LVU169
 774 0196 0123     		movgt	r3, #1
 775 0198 002A     		cmp	r2, #0
 776 019a D4BF     		ite	le
 777 019c 0022     		movle	r2, #0
 778              	.LVL72:
 779              		.loc 1 681 5 view .LVU170
 780 019e 0122     		movgt	r2, #1
 781 01a0 89B2     		uxth	r1, r1
 782 01a2 80B2     		uxth	r0, r0
 783 01a4 FFF7FEFF 		bl	M_SetSpeed
 784              	.LVL73:
 682:Core/Src/main.c **** }
 785              		.loc 1 682 1 view .LVU171
 786 01a8 03B0     		add	sp, sp, #12
 787              		.cfi_def_cfa_offset 36
 788              		@ sp needed
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 27


 789 01aa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 790              	.LVL74:
 791              	.L40:
 792              		.loc 1 682 1 view .LVU172
 793 01ae 00BF     		.align	2
 794              	.L39:
 795 01b0 00000000 		.word	P
 796 01b4 00000000 		.word	I
 797 01b8 00000000 		.word	previousError
 798 01bc 00000000 		.word	D
 799 01c0 00000000 		.word	Kp
 800 01c4 00000000 		.word	multiP
 801 01c8 00002440 		.word	1076101120
 802 01cc 00000000 		.word	Pvalue
 803 01d0 00000000 		.word	Ki
 804 01d4 00000000 		.word	multiI
 805 01d8 00000000 		.word	Ivalue
 806 01dc 00000000 		.word	Kd
 807 01e0 00000000 		.word	multiD
 808 01e4 00000000 		.word	Dvalue
 809 01e8 00000000 		.word	lfspeed
 810 01ec 00000000 		.word	lsp
 811 01f0 00000000 		.word	rsp
 812 01f4 44FDFFFF 		.word	-700
 813              		.cfi_endproc
 814              	.LFE77:
 816              		.section	.text.Normalize_Sensors,"ax",%progbits
 817              		.align	1
 818              		.global	Normalize_Sensors
 819              		.syntax unified
 820              		.thumb
 821              		.thumb_func
 823              	Normalize_Sensors:
 824              	.LVL75:
 825              	.LFB78:
 683:Core/Src/main.c **** 
 684:Core/Src/main.c **** 
 685:Core/Src/main.c **** uint16_t Normalize_Sensors(uint16_t raw, uint8_t i) {
 826              		.loc 1 685 53 is_stmt 1 view -0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 686:Core/Src/main.c ****     if (BLACK[i] == WHITE[i]) return 0; // avoid div by 0
 831              		.loc 1 686 5 view .LVU174
 832              		.loc 1 686 14 is_stmt 0 view .LVU175
 833 0000 0D4B     		ldr	r3, .L47
 834 0002 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 835              		.loc 1 686 26 view .LVU176
 836 0006 0D4A     		ldr	r2, .L47+4
 837 0008 32F81120 		ldrh	r2, [r2, r1, lsl #1]
 838              		.loc 1 686 8 view .LVU177
 839 000c 9342     		cmp	r3, r2
 840 000e 11D0     		beq	.L44
 687:Core/Src/main.c **** 
 688:Core/Src/main.c ****     int32_t val = ((int32_t)(raw - WHITE[i]) * 1000) / (BLACK[i] - WHITE[i]);
 841              		.loc 1 688 5 is_stmt 1 view .LVU178
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 28


 842              		.loc 1 688 34 is_stmt 0 view .LVU179
 843 0010 801A     		subs	r0, r0, r2
 844              	.LVL76:
 845              		.loc 1 688 46 view .LVU180
 846 0012 4FF47A71 		mov	r1, #1000
 847              	.LVL77:
 848              		.loc 1 688 46 view .LVU181
 849 0016 01FB00F0 		mul	r0, r1, r0
 850              		.loc 1 688 66 view .LVU182
 851 001a 9B1A     		subs	r3, r3, r2
 852              		.loc 1 688 13 view .LVU183
 853 001c 90FBF3F0 		sdiv	r0, r0, r3
 854              	.LVL78:
 689:Core/Src/main.c **** 
 690:Core/Src/main.c ****     if (val < 0) val = 0;
 855              		.loc 1 690 5 is_stmt 1 view .LVU184
 856              		.loc 1 690 8 is_stmt 0 view .LVU185
 857 0020 0028     		cmp	r0, #0
 858 0022 04DB     		blt	.L45
 691:Core/Src/main.c ****     if (val > 1000) val = 1000;
 859              		.loc 1 691 5 is_stmt 1 view .LVU186
 860              		.loc 1 691 8 is_stmt 0 view .LVU187
 861 0024 8842     		cmp	r0, r1
 862 0026 03DD     		ble	.L43
 863              		.loc 1 691 25 discriminator 1 view .LVU188
 864 0028 4FF47A70 		mov	r0, #1000
 865              	.LVL79:
 866              		.loc 1 691 25 discriminator 1 view .LVU189
 867 002c 00E0     		b	.L43
 868              	.LVL80:
 869              	.L45:
 690:Core/Src/main.c ****     if (val > 1000) val = 1000;
 870              		.loc 1 690 22 discriminator 1 view .LVU190
 871 002e 0020     		movs	r0, #0
 872              	.LVL81:
 873              	.L43:
 692:Core/Src/main.c **** 
 693:Core/Src/main.c ****     return (uint16_t)val;
 874              		.loc 1 693 5 is_stmt 1 view .LVU191
 875              		.loc 1 693 12 is_stmt 0 view .LVU192
 876 0030 80B2     		uxth	r0, r0
 877              	.LVL82:
 878              		.loc 1 693 12 view .LVU193
 879 0032 7047     		bx	lr
 880              	.LVL83:
 881              	.L44:
 686:Core/Src/main.c **** 
 882              		.loc 1 686 38 discriminator 1 view .LVU194
 883 0034 0020     		movs	r0, #0
 884              	.LVL84:
 694:Core/Src/main.c **** }
 885              		.loc 1 694 1 view .LVU195
 886 0036 7047     		bx	lr
 887              	.L48:
 888              		.align	2
 889              	.L47:
 890 0038 00000000 		.word	BLACK
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 29


 891 003c 00000000 		.word	WHITE
 892              		.cfi_endproc
 893              	.LFE78:
 895              		.section	.text.Read_Line,"ax",%progbits
 896              		.align	1
 897              		.global	Read_Line
 898              		.syntax unified
 899              		.thumb
 900              		.thumb_func
 902              	Read_Line:
 903              	.LFB76:
 634:Core/Src/main.c ****     uint32_t avg = 0;
 904              		.loc 1 634 25 is_stmt 1 view -0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 909              		.cfi_def_cfa_offset 24
 910              		.cfi_offset 3, -24
 911              		.cfi_offset 4, -20
 912              		.cfi_offset 5, -16
 913              		.cfi_offset 6, -12
 914              		.cfi_offset 7, -8
 915              		.cfi_offset 14, -4
 635:Core/Src/main.c ****     uint32_t sum = 0;
 916              		.loc 1 635 5 view .LVU197
 917              	.LVL85:
 636:Core/Src/main.c **** 
 918              		.loc 1 636 5 view .LVU198
 638:Core/Src/main.c ****         uint16_t value = Normalize_Sensors(adc_buffer[i+1], i);  // ADC value for sensor i
 919              		.loc 1 638 5 view .LVU199
 920              	.LBB10:
 638:Core/Src/main.c ****         uint16_t value = Normalize_Sensors(adc_buffer[i+1], i);  // ADC value for sensor i
 921              		.loc 1 638 10 view .LVU200
 638:Core/Src/main.c ****         uint16_t value = Normalize_Sensors(adc_buffer[i+1], i);  // ADC value for sensor i
 922              		.loc 1 638 18 is_stmt 0 view .LVU201
 923 0002 0024     		movs	r4, #0
 924              	.LBE10:
 636:Core/Src/main.c **** 
 925              		.loc 1 636 14 view .LVU202
 926 0004 2646     		mov	r6, r4
 635:Core/Src/main.c ****     uint32_t sum = 0;
 927              		.loc 1 635 14 view .LVU203
 928 0006 2746     		mov	r7, r4
 929              	.LBB12:
 638:Core/Src/main.c ****         uint16_t value = Normalize_Sensors(adc_buffer[i+1], i);  // ADC value for sensor i
 930              		.loc 1 638 5 view .LVU204
 931 0008 0EE0     		b	.L50
 932              	.LVL86:
 933              	.L51:
 934              	.LBB11:
 639:Core/Src/main.c ****         avg += (uint32_t)value * (i * 1000);
 935              		.loc 1 639 9 is_stmt 1 view .LVU205
 639:Core/Src/main.c ****         avg += (uint32_t)value * (i * 1000);
 936              		.loc 1 639 56 is_stmt 0 view .LVU206
 937 000a 651C     		adds	r5, r4, #1
 639:Core/Src/main.c ****         avg += (uint32_t)value * (i * 1000);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 30


 938              		.loc 1 639 26 view .LVU207
 939 000c 2146     		mov	r1, r4
 940 000e 0A4B     		ldr	r3, .L54
 941 0010 33F82500 		ldrh	r0, [r3, r5, lsl #2]
 942 0014 FFF7FEFF 		bl	Normalize_Sensors
 943              	.LVL87:
 640:Core/Src/main.c ****         sum += value;
 944              		.loc 1 640 9 is_stmt 1 view .LVU208
 640:Core/Src/main.c ****         sum += value;
 945              		.loc 1 640 32 is_stmt 0 view .LVU209
 946 0018 00FB04F4 		mul	r4, r0, r4
 947              	.LVL88:
 640:Core/Src/main.c ****         sum += value;
 948              		.loc 1 640 13 view .LVU210
 949 001c 4FF47A73 		mov	r3, #1000
 950 0020 03FB0477 		mla	r7, r3, r4, r7
 951              	.LVL89:
 641:Core/Src/main.c ****     }
 952              		.loc 1 641 9 is_stmt 1 view .LVU211
 641:Core/Src/main.c ****     }
 953              		.loc 1 641 13 is_stmt 0 view .LVU212
 954 0024 0644     		add	r6, r6, r0
 955              	.LVL90:
 641:Core/Src/main.c ****     }
 956              		.loc 1 641 13 view .LVU213
 957              	.LBE11:
 638:Core/Src/main.c ****         uint16_t value = Normalize_Sensors(adc_buffer[i+1], i);  // ADC value for sensor i
 958              		.loc 1 638 33 is_stmt 1 discriminator 3 view .LVU214
 959 0026 ECB2     		uxtb	r4, r5
 960              	.LVL91:
 961              	.L50:
 638:Core/Src/main.c ****         uint16_t value = Normalize_Sensors(adc_buffer[i+1], i);  // ADC value for sensor i
 962              		.loc 1 638 27 discriminator 1 view .LVU215
 963 0028 072C     		cmp	r4, #7
 964 002a EED9     		bls	.L51
 965              	.LBE12:
 644:Core/Src/main.c ****     return avg / sum;        // 0 … 7000
 966              		.loc 1 644 5 view .LVU216
 644:Core/Src/main.c ****     return avg / sum;        // 0 … 7000
 967              		.loc 1 644 8 is_stmt 0 view .LVU217
 968 002c 0EB1     		cbz	r6, .L49
 645:Core/Src/main.c **** }
 969              		.loc 1 645 5 is_stmt 1 view .LVU218
 645:Core/Src/main.c **** }
 970              		.loc 1 645 16 is_stmt 0 view .LVU219
 971 002e B7FBF6F6 		udiv	r6, r7, r6
 972              	.LVL92:
 973              	.L49:
 646:Core/Src/main.c **** 
 974              		.loc 1 646 1 view .LVU220
 975 0032 3046     		mov	r0, r6
 976 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 977              	.LVL93:
 978              	.L55:
 646:Core/Src/main.c **** 
 979              		.loc 1 646 1 view .LVU221
 980 0036 00BF     		.align	2
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 31


 981              	.L54:
 982 0038 00000000 		.word	adc_buffer
 983              		.cfi_endproc
 984              	.LFE76:
 986              		.section	.text.Robot_Control,"ax",%progbits
 987              		.align	1
 988              		.global	Robot_Control
 989              		.syntax unified
 990              		.thumb
 991              		.thumb_func
 993              	Robot_Control:
 994              	.LFB74:
 603:Core/Src/main.c **** 
 995              		.loc 1 603 25 is_stmt 1 view -0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999 0000 08B5     		push	{r3, lr}
 1000              		.cfi_def_cfa_offset 8
 1001              		.cfi_offset 3, -8
 1002              		.cfi_offset 14, -4
 605:Core/Src/main.c ****   error = 3500 - position;
 1003              		.loc 1 605 3 view .LVU223
 605:Core/Src/main.c ****   error = 3500 - position;
 1004              		.loc 1 605 14 is_stmt 0 view .LVU224
 1005 0002 FFF7FEFF 		bl	Read_Line
 1006              	.LVL94:
 605:Core/Src/main.c ****   error = 3500 - position;
 1007              		.loc 1 605 12 discriminator 1 view .LVU225
 1008 0006 1A4B     		ldr	r3, .L65
 1009 0008 1880     		strh	r0, [r3]	@ movhi
 606:Core/Src/main.c ****   while(Get_Line() == 0){
 1010              		.loc 1 606 3 is_stmt 1 view .LVU226
 606:Core/Src/main.c ****   while(Get_Line() == 0){
 1011              		.loc 1 606 16 is_stmt 0 view .LVU227
 1012 000a 83B2     		uxth	r3, r0
 1013 000c C3F55A63 		rsb	r3, r3, #3488
 1014 0010 0C33     		adds	r3, r3, #12
 606:Core/Src/main.c ****   while(Get_Line() == 0){
 1015              		.loc 1 606 9 view .LVU228
 1016 0012 184A     		ldr	r2, .L65+4
 1017 0014 1360     		str	r3, [r2]
 607:Core/Src/main.c ****     if(previousError<0){      
 1018              		.loc 1 607 3 is_stmt 1 view .LVU229
 607:Core/Src/main.c ****     if(previousError<0){      
 1019              		.loc 1 607 8 is_stmt 0 view .LVU230
 1020 0016 16E0     		b	.L57
 1021              	.L64:
 609:Core/Src/main.c ****     }
 1022              		.loc 1 609 7 is_stmt 1 view .LVU231
 1023 0018 0123     		movs	r3, #1
 1024 001a 0022     		movs	r2, #0
 1025 001c 40F2E911 		movw	r1, #489
 1026 0020 0846     		mov	r0, r1
 1027 0022 FFF7FEFF 		bl	M_SetSpeed
 1028              	.LVL95:
 1029              	.L59:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 32


 614:Core/Src/main.c ****     HAL_ADC_Start_DMA(&hadc1, adc_buffer, 9);
 1030              		.loc 1 614 5 view .LVU232
 614:Core/Src/main.c ****     HAL_ADC_Start_DMA(&hadc1, adc_buffer, 9);
 1031              		.loc 1 614 19 is_stmt 0 view .LVU233
 1032 0026 144B     		ldr	r3, .L65+8
 1033 0028 0022     		movs	r2, #0
 1034 002a 1A70     		strb	r2, [r3]
 615:Core/Src/main.c ****     while(!adc_done_flag);
 1035              		.loc 1 615 5 is_stmt 1 view .LVU234
 1036 002c 0922     		movs	r2, #9
 1037 002e 1349     		ldr	r1, .L65+12
 1038 0030 1348     		ldr	r0, .L65+16
 1039 0032 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1040              	.LVL96:
 616:Core/Src/main.c **** 
 1041              		.loc 1 616 5 view .LVU235
 1042              	.L60:
 616:Core/Src/main.c **** 
 1043              		.loc 1 616 11 discriminator 1 view .LVU236
 1044 0036 104B     		ldr	r3, .L65+8
 1045 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1046 003a 002B     		cmp	r3, #0
 1047 003c FBD0     		beq	.L60
 618:Core/Src/main.c ****   }
 1048              		.loc 1 618 5 view .LVU237
 618:Core/Src/main.c ****   }
 1049              		.loc 1 618 16 is_stmt 0 view .LVU238
 1050 003e FFF7FEFF 		bl	Read_Line
 1051              	.LVL97:
 618:Core/Src/main.c ****   }
 1052              		.loc 1 618 14 discriminator 1 view .LVU239
 1053 0042 0B4B     		ldr	r3, .L65
 1054 0044 1880     		strh	r0, [r3]	@ movhi
 1055              	.L57:
 607:Core/Src/main.c ****     if(previousError<0){      
 1056              		.loc 1 607 20 is_stmt 1 view .LVU240
 607:Core/Src/main.c ****     if(previousError<0){      
 1057              		.loc 1 607 9 is_stmt 0 view .LVU241
 1058 0046 FFF7FEFF 		bl	Get_Line
 1059              	.LVL98:
 607:Core/Src/main.c ****     if(previousError<0){      
 1060              		.loc 1 607 20 discriminator 1 view .LVU242
 1061 004a 58B9     		cbnz	r0, .L63
 608:Core/Src/main.c ****       M_SetSpeed(0.7*MAX_SPEED, 0.7*MAX_SPEED, BACKWARD, FORWARD);
 1062              		.loc 1 608 5 is_stmt 1 view .LVU243
 608:Core/Src/main.c ****       M_SetSpeed(0.7*MAX_SPEED, 0.7*MAX_SPEED, BACKWARD, FORWARD);
 1063              		.loc 1 608 21 is_stmt 0 view .LVU244
 1064 004c 0D4B     		ldr	r3, .L65+20
 1065 004e 1B68     		ldr	r3, [r3]
 608:Core/Src/main.c ****       M_SetSpeed(0.7*MAX_SPEED, 0.7*MAX_SPEED, BACKWARD, FORWARD);
 1066              		.loc 1 608 7 view .LVU245
 1067 0050 002B     		cmp	r3, #0
 1068 0052 E1DB     		blt	.L64
 612:Core/Src/main.c ****     }
 1069              		.loc 1 612 7 is_stmt 1 view .LVU246
 1070 0054 0023     		movs	r3, #0
 1071 0056 0122     		movs	r2, #1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 33


 1072 0058 40F2E911 		movw	r1, #489
 1073 005c 0846     		mov	r0, r1
 1074 005e FFF7FEFF 		bl	M_SetSpeed
 1075              	.LVL99:
 1076 0062 E0E7     		b	.L59
 1077              	.L63:
 621:Core/Src/main.c **** }
 1078              		.loc 1 621 3 view .LVU247
 1079 0064 034B     		ldr	r3, .L65+4
 1080 0066 1868     		ldr	r0, [r3]
 1081 0068 FFF7FEFF 		bl	PID_Linefollow
 1082              	.LVL100:
 622:Core/Src/main.c **** 
 1083              		.loc 1 622 1 is_stmt 0 view .LVU248
 1084 006c 08BD     		pop	{r3, pc}
 1085              	.L66:
 1086 006e 00BF     		.align	2
 1087              	.L65:
 1088 0070 00000000 		.word	position
 1089 0074 00000000 		.word	error
 1090 0078 00000000 		.word	adc_done_flag
 1091 007c 00000000 		.word	adc_buffer
 1092 0080 00000000 		.word	hadc1
 1093 0084 00000000 		.word	previousError
 1094              		.cfi_endproc
 1095              	.LFE74:
 1097              		.section	.text.Error_Handler,"ax",%progbits
 1098              		.align	1
 1099              		.global	Error_Handler
 1100              		.syntax unified
 1101              		.thumb
 1102              		.thumb_func
 1104              	Error_Handler:
 1105              	.LFB79:
 695:Core/Src/main.c **** /* USER CODE END 4 */
 696:Core/Src/main.c **** 
 697:Core/Src/main.c **** /**
 698:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 699:Core/Src/main.c ****   * @retval None
 700:Core/Src/main.c ****   */
 701:Core/Src/main.c **** void Error_Handler(void)
 702:Core/Src/main.c **** {
 1106              		.loc 1 702 1 is_stmt 1 view -0
 1107              		.cfi_startproc
 1108              		@ Volatile: function does not return.
 1109              		@ args = 0, pretend = 0, frame = 0
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 1111              		@ link register save eliminated.
 703:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 704:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 705:Core/Src/main.c ****   __disable_irq();
 1112              		.loc 1 705 3 view .LVU250
 1113              	.LBB13:
 1114              	.LBI13:
 1115              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 34


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 35


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 36


 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1116              		.loc 2 140 27 view .LVU251
 1117              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1118              		.loc 2 142 3 view .LVU252
 1119              		.syntax unified
 1120              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1121 0000 72B6     		cpsid i
 1122              	@ 0 "" 2
 1123              		.thumb
 1124              		.syntax unified
 1125              	.L68:
 1126              	.LBE14:
 1127              	.LBE13:
 706:Core/Src/main.c ****   while (1)
 1128              		.loc 1 706 3 view .LVU253
 707:Core/Src/main.c ****   {
 708:Core/Src/main.c ****   }
 1129              		.loc 1 708 3 view .LVU254
 706:Core/Src/main.c ****   while (1)
 1130              		.loc 1 706 9 view .LVU255
 1131 0002 FEE7     		b	.L68
 1132              		.cfi_endproc
 1133              	.LFE79:
 1135              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1136              		.align	1
 1137              		.syntax unified
 1138              		.thumb
 1139              		.thumb_func
 1141              	MX_ADC1_Init:
 1142              	.LFB67:
 255:Core/Src/main.c **** 
 1143              		.loc 1 255 1 view -0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 37


 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 16
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147 0000 00B5     		push	{lr}
 1148              		.cfi_def_cfa_offset 4
 1149              		.cfi_offset 14, -4
 1150 0002 85B0     		sub	sp, sp, #20
 1151              		.cfi_def_cfa_offset 24
 261:Core/Src/main.c **** 
 1152              		.loc 1 261 3 view .LVU257
 261:Core/Src/main.c **** 
 1153              		.loc 1 261 26 is_stmt 0 view .LVU258
 1154 0004 0023     		movs	r3, #0
 1155 0006 0193     		str	r3, [sp, #4]
 1156 0008 0293     		str	r3, [sp, #8]
 1157 000a 0393     		str	r3, [sp, #12]
 269:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 1158              		.loc 1 269 3 is_stmt 1 view .LVU259
 269:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 1159              		.loc 1 269 18 is_stmt 0 view .LVU260
 1160 000c 3B48     		ldr	r0, .L91
 1161 000e 3C4A     		ldr	r2, .L91+4
 1162 0010 0260     		str	r2, [r0]
 270:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1163              		.loc 1 270 3 is_stmt 1 view .LVU261
 270:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1164              		.loc 1 270 27 is_stmt 0 view .LVU262
 1165 0012 4FF48072 		mov	r2, #256
 1166 0016 8260     		str	r2, [r0, #8]
 271:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1167              		.loc 1 271 3 is_stmt 1 view .LVU263
 271:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1168              		.loc 1 271 33 is_stmt 0 view .LVU264
 1169 0018 0373     		strb	r3, [r0, #12]
 272:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1170              		.loc 1 272 3 is_stmt 1 view .LVU265
 272:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1171              		.loc 1 272 36 is_stmt 0 view .LVU266
 1172 001a 0375     		strb	r3, [r0, #20]
 273:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1173              		.loc 1 273 3 is_stmt 1 view .LVU267
 273:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1174              		.loc 1 273 31 is_stmt 0 view .LVU268
 1175 001c 4FF46022 		mov	r2, #917504
 1176 0020 C261     		str	r2, [r0, #28]
 274:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 9;
 1177              		.loc 1 274 3 is_stmt 1 view .LVU269
 274:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 9;
 1178              		.loc 1 274 24 is_stmt 0 view .LVU270
 1179 0022 4360     		str	r3, [r0, #4]
 275:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1180              		.loc 1 275 3 is_stmt 1 view .LVU271
 275:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1181              		.loc 1 275 30 is_stmt 0 view .LVU272
 1182 0024 0923     		movs	r3, #9
 1183 0026 0361     		str	r3, [r0, #16]
 276:Core/Src/main.c ****   {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 38


 1184              		.loc 1 276 3 is_stmt 1 view .LVU273
 276:Core/Src/main.c ****   {
 1185              		.loc 1 276 7 is_stmt 0 view .LVU274
 1186 0028 FFF7FEFF 		bl	HAL_ADC_Init
 1187              	.LVL101:
 276:Core/Src/main.c ****   {
 1188              		.loc 1 276 6 discriminator 1 view .LVU275
 1189 002c 0028     		cmp	r0, #0
 1190 002e 50D1     		bne	.L81
 283:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1191              		.loc 1 283 3 is_stmt 1 view .LVU276
 283:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1192              		.loc 1 283 19 is_stmt 0 view .LVU277
 1193 0030 0123     		movs	r3, #1
 1194 0032 0193     		str	r3, [sp, #4]
 284:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
 1195              		.loc 1 284 3 is_stmt 1 view .LVU278
 284:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_7CYCLES_5;
 1196              		.loc 1 284 16 is_stmt 0 view .LVU279
 1197 0034 0293     		str	r3, [sp, #8]
 285:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1198              		.loc 1 285 3 is_stmt 1 view .LVU280
 285:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1199              		.loc 1 285 24 is_stmt 0 view .LVU281
 1200 0036 0393     		str	r3, [sp, #12]
 286:Core/Src/main.c ****   {
 1201              		.loc 1 286 3 is_stmt 1 view .LVU282
 286:Core/Src/main.c ****   {
 1202              		.loc 1 286 7 is_stmt 0 view .LVU283
 1203 0038 01A9     		add	r1, sp, #4
 1204 003a 3048     		ldr	r0, .L91
 1205 003c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1206              	.LVL102:
 286:Core/Src/main.c ****   {
 1207              		.loc 1 286 6 discriminator 1 view .LVU284
 1208 0040 0028     		cmp	r0, #0
 1209 0042 48D1     		bne	.L82
 293:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 1210              		.loc 1 293 3 is_stmt 1 view .LVU285
 293:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 1211              		.loc 1 293 19 is_stmt 0 view .LVU286
 1212 0044 0223     		movs	r3, #2
 1213 0046 0193     		str	r3, [sp, #4]
 294:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1214              		.loc 1 294 3 is_stmt 1 view .LVU287
 294:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1215              		.loc 1 294 16 is_stmt 0 view .LVU288
 1216 0048 0293     		str	r3, [sp, #8]
 295:Core/Src/main.c ****   {
 1217              		.loc 1 295 3 is_stmt 1 view .LVU289
 295:Core/Src/main.c ****   {
 1218              		.loc 1 295 7 is_stmt 0 view .LVU290
 1219 004a 01A9     		add	r1, sp, #4
 1220 004c 2B48     		ldr	r0, .L91
 1221 004e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1222              	.LVL103:
 295:Core/Src/main.c ****   {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 39


 1223              		.loc 1 295 6 discriminator 1 view .LVU291
 1224 0052 0028     		cmp	r0, #0
 1225 0054 41D1     		bne	.L83
 302:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 1226              		.loc 1 302 3 is_stmt 1 view .LVU292
 302:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 1227              		.loc 1 302 19 is_stmt 0 view .LVU293
 1228 0056 0323     		movs	r3, #3
 1229 0058 0193     		str	r3, [sp, #4]
 303:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1230              		.loc 1 303 3 is_stmt 1 view .LVU294
 303:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1231              		.loc 1 303 16 is_stmt 0 view .LVU295
 1232 005a 0293     		str	r3, [sp, #8]
 304:Core/Src/main.c ****   {
 1233              		.loc 1 304 3 is_stmt 1 view .LVU296
 304:Core/Src/main.c ****   {
 1234              		.loc 1 304 7 is_stmt 0 view .LVU297
 1235 005c 01A9     		add	r1, sp, #4
 1236 005e 2748     		ldr	r0, .L91
 1237 0060 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1238              	.LVL104:
 304:Core/Src/main.c ****   {
 1239              		.loc 1 304 6 discriminator 1 view .LVU298
 1240 0064 0028     		cmp	r0, #0
 1241 0066 3AD1     		bne	.L84
 311:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 1242              		.loc 1 311 3 is_stmt 1 view .LVU299
 311:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 1243              		.loc 1 311 19 is_stmt 0 view .LVU300
 1244 0068 0423     		movs	r3, #4
 1245 006a 0193     		str	r3, [sp, #4]
 312:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1246              		.loc 1 312 3 is_stmt 1 view .LVU301
 312:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1247              		.loc 1 312 16 is_stmt 0 view .LVU302
 1248 006c 0293     		str	r3, [sp, #8]
 313:Core/Src/main.c ****   {
 1249              		.loc 1 313 3 is_stmt 1 view .LVU303
 313:Core/Src/main.c ****   {
 1250              		.loc 1 313 7 is_stmt 0 view .LVU304
 1251 006e 0DEB0301 		add	r1, sp, r3
 1252 0072 2248     		ldr	r0, .L91
 1253 0074 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1254              	.LVL105:
 313:Core/Src/main.c ****   {
 1255              		.loc 1 313 6 discriminator 1 view .LVU305
 1256 0078 0028     		cmp	r0, #0
 1257 007a 32D1     		bne	.L85
 320:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 1258              		.loc 1 320 3 is_stmt 1 view .LVU306
 320:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 1259              		.loc 1 320 19 is_stmt 0 view .LVU307
 1260 007c 0523     		movs	r3, #5
 1261 007e 0193     		str	r3, [sp, #4]
 321:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1262              		.loc 1 321 3 is_stmt 1 view .LVU308
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 40


 321:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1263              		.loc 1 321 16 is_stmt 0 view .LVU309
 1264 0080 0293     		str	r3, [sp, #8]
 322:Core/Src/main.c ****   {
 1265              		.loc 1 322 3 is_stmt 1 view .LVU310
 322:Core/Src/main.c ****   {
 1266              		.loc 1 322 7 is_stmt 0 view .LVU311
 1267 0082 01A9     		add	r1, sp, #4
 1268 0084 1D48     		ldr	r0, .L91
 1269 0086 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1270              	.LVL106:
 322:Core/Src/main.c ****   {
 1271              		.loc 1 322 6 discriminator 1 view .LVU312
 1272 008a 60BB     		cbnz	r0, .L86
 329:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 1273              		.loc 1 329 3 is_stmt 1 view .LVU313
 329:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 1274              		.loc 1 329 19 is_stmt 0 view .LVU314
 1275 008c 0623     		movs	r3, #6
 1276 008e 0193     		str	r3, [sp, #4]
 330:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1277              		.loc 1 330 3 is_stmt 1 view .LVU315
 330:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1278              		.loc 1 330 16 is_stmt 0 view .LVU316
 1279 0090 0293     		str	r3, [sp, #8]
 331:Core/Src/main.c ****   {
 1280              		.loc 1 331 3 is_stmt 1 view .LVU317
 331:Core/Src/main.c ****   {
 1281              		.loc 1 331 7 is_stmt 0 view .LVU318
 1282 0092 01A9     		add	r1, sp, #4
 1283 0094 1948     		ldr	r0, .L91
 1284 0096 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1285              	.LVL107:
 331:Core/Src/main.c ****   {
 1286              		.loc 1 331 6 discriminator 1 view .LVU319
 1287 009a 30BB     		cbnz	r0, .L87
 338:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 1288              		.loc 1 338 3 is_stmt 1 view .LVU320
 338:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_7;
 1289              		.loc 1 338 19 is_stmt 0 view .LVU321
 1290 009c 0723     		movs	r3, #7
 1291 009e 0193     		str	r3, [sp, #4]
 339:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1292              		.loc 1 339 3 is_stmt 1 view .LVU322
 339:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1293              		.loc 1 339 16 is_stmt 0 view .LVU323
 1294 00a0 0293     		str	r3, [sp, #8]
 340:Core/Src/main.c ****   {
 1295              		.loc 1 340 3 is_stmt 1 view .LVU324
 340:Core/Src/main.c ****   {
 1296              		.loc 1 340 7 is_stmt 0 view .LVU325
 1297 00a2 01A9     		add	r1, sp, #4
 1298 00a4 1548     		ldr	r0, .L91
 1299 00a6 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1300              	.LVL108:
 340:Core/Src/main.c ****   {
 1301              		.loc 1 340 6 discriminator 1 view .LVU326
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 41


 1302 00aa 00BB     		cbnz	r0, .L88
 347:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 1303              		.loc 1 347 3 is_stmt 1 view .LVU327
 347:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_8;
 1304              		.loc 1 347 19 is_stmt 0 view .LVU328
 1305 00ac 0823     		movs	r3, #8
 1306 00ae 0193     		str	r3, [sp, #4]
 348:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1307              		.loc 1 348 3 is_stmt 1 view .LVU329
 348:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1308              		.loc 1 348 16 is_stmt 0 view .LVU330
 1309 00b0 0293     		str	r3, [sp, #8]
 349:Core/Src/main.c ****   {
 1310              		.loc 1 349 3 is_stmt 1 view .LVU331
 349:Core/Src/main.c ****   {
 1311              		.loc 1 349 7 is_stmt 0 view .LVU332
 1312 00b2 01A9     		add	r1, sp, #4
 1313 00b4 1148     		ldr	r0, .L91
 1314 00b6 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1315              	.LVL109:
 349:Core/Src/main.c ****   {
 1316              		.loc 1 349 6 discriminator 1 view .LVU333
 1317 00ba D0B9     		cbnz	r0, .L89
 356:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_9;
 1318              		.loc 1 356 3 is_stmt 1 view .LVU334
 356:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_9;
 1319              		.loc 1 356 19 is_stmt 0 view .LVU335
 1320 00bc 0923     		movs	r3, #9
 1321 00be 0193     		str	r3, [sp, #4]
 357:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1322              		.loc 1 357 3 is_stmt 1 view .LVU336
 357:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1323              		.loc 1 357 16 is_stmt 0 view .LVU337
 1324 00c0 0293     		str	r3, [sp, #8]
 358:Core/Src/main.c ****   {
 1325              		.loc 1 358 3 is_stmt 1 view .LVU338
 358:Core/Src/main.c ****   {
 1326              		.loc 1 358 7 is_stmt 0 view .LVU339
 1327 00c2 01A9     		add	r1, sp, #4
 1328 00c4 0D48     		ldr	r0, .L91
 1329 00c6 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1330              	.LVL110:
 358:Core/Src/main.c ****   {
 1331              		.loc 1 358 6 discriminator 1 view .LVU340
 1332 00ca A0B9     		cbnz	r0, .L90
 366:Core/Src/main.c **** 
 1333              		.loc 1 366 1 view .LVU341
 1334 00cc 05B0     		add	sp, sp, #20
 1335              		.cfi_remember_state
 1336              		.cfi_def_cfa_offset 4
 1337              		@ sp needed
 1338 00ce 5DF804FB 		ldr	pc, [sp], #4
 1339              	.L81:
 1340              		.cfi_restore_state
 278:Core/Src/main.c ****   }
 1341              		.loc 1 278 5 is_stmt 1 view .LVU342
 1342 00d2 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 42


 1343              	.LVL111:
 1344              	.L82:
 288:Core/Src/main.c ****   }
 1345              		.loc 1 288 5 view .LVU343
 1346 00d6 FFF7FEFF 		bl	Error_Handler
 1347              	.LVL112:
 1348              	.L83:
 297:Core/Src/main.c ****   }
 1349              		.loc 1 297 5 view .LVU344
 1350 00da FFF7FEFF 		bl	Error_Handler
 1351              	.LVL113:
 1352              	.L84:
 306:Core/Src/main.c ****   }
 1353              		.loc 1 306 5 view .LVU345
 1354 00de FFF7FEFF 		bl	Error_Handler
 1355              	.LVL114:
 1356              	.L85:
 315:Core/Src/main.c ****   }
 1357              		.loc 1 315 5 view .LVU346
 1358 00e2 FFF7FEFF 		bl	Error_Handler
 1359              	.LVL115:
 1360              	.L86:
 324:Core/Src/main.c ****   }
 1361              		.loc 1 324 5 view .LVU347
 1362 00e6 FFF7FEFF 		bl	Error_Handler
 1363              	.LVL116:
 1364              	.L87:
 333:Core/Src/main.c ****   }
 1365              		.loc 1 333 5 view .LVU348
 1366 00ea FFF7FEFF 		bl	Error_Handler
 1367              	.LVL117:
 1368              	.L88:
 342:Core/Src/main.c ****   }
 1369              		.loc 1 342 5 view .LVU349
 1370 00ee FFF7FEFF 		bl	Error_Handler
 1371              	.LVL118:
 1372              	.L89:
 351:Core/Src/main.c ****   }
 1373              		.loc 1 351 5 view .LVU350
 1374 00f2 FFF7FEFF 		bl	Error_Handler
 1375              	.LVL119:
 1376              	.L90:
 360:Core/Src/main.c ****   }
 1377              		.loc 1 360 5 view .LVU351
 1378 00f6 FFF7FEFF 		bl	Error_Handler
 1379              	.LVL120:
 1380              	.L92:
 1381 00fa 00BF     		.align	2
 1382              	.L91:
 1383 00fc 00000000 		.word	hadc1
 1384 0100 00240140 		.word	1073816576
 1385              		.cfi_endproc
 1386              	.LFE67:
 1388              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1389              		.align	1
 1390              		.syntax unified
 1391              		.thumb
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 43


 1392              		.thumb_func
 1394              	MX_TIM1_Init:
 1395              	.LFB68:
 374:Core/Src/main.c **** 
 1396              		.loc 1 374 1 view -0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 88
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400 0000 10B5     		push	{r4, lr}
 1401              		.cfi_def_cfa_offset 8
 1402              		.cfi_offset 4, -8
 1403              		.cfi_offset 14, -4
 1404 0002 96B0     		sub	sp, sp, #88
 1405              		.cfi_def_cfa_offset 96
 380:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1406              		.loc 1 380 3 view .LVU353
 380:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1407              		.loc 1 380 26 is_stmt 0 view .LVU354
 1408 0004 0024     		movs	r4, #0
 1409 0006 1294     		str	r4, [sp, #72]
 1410 0008 1394     		str	r4, [sp, #76]
 1411 000a 1494     		str	r4, [sp, #80]
 1412 000c 1594     		str	r4, [sp, #84]
 381:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1413              		.loc 1 381 3 is_stmt 1 view .LVU355
 381:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1414              		.loc 1 381 27 is_stmt 0 view .LVU356
 1415 000e 1094     		str	r4, [sp, #64]
 1416 0010 1194     		str	r4, [sp, #68]
 382:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1417              		.loc 1 382 3 is_stmt 1 view .LVU357
 382:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1418              		.loc 1 382 22 is_stmt 0 view .LVU358
 1419 0012 0994     		str	r4, [sp, #36]
 1420 0014 0A94     		str	r4, [sp, #40]
 1421 0016 0B94     		str	r4, [sp, #44]
 1422 0018 0C94     		str	r4, [sp, #48]
 1423 001a 0D94     		str	r4, [sp, #52]
 1424 001c 0E94     		str	r4, [sp, #56]
 1425 001e 0F94     		str	r4, [sp, #60]
 383:Core/Src/main.c **** 
 1426              		.loc 1 383 3 is_stmt 1 view .LVU359
 383:Core/Src/main.c **** 
 1427              		.loc 1 383 34 is_stmt 0 view .LVU360
 1428 0020 2022     		movs	r2, #32
 1429 0022 2146     		mov	r1, r4
 1430 0024 01A8     		add	r0, sp, #4
 1431 0026 FFF7FEFF 		bl	memset
 1432              	.LVL121:
 388:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1433              		.loc 1 388 3 is_stmt 1 view .LVU361
 388:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1434              		.loc 1 388 18 is_stmt 0 view .LVU362
 1435 002a 2E48     		ldr	r0, .L109
 1436 002c 2E4B     		ldr	r3, .L109+4
 1437 002e 0360     		str	r3, [r0]
 389:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 44


 1438              		.loc 1 389 3 is_stmt 1 view .LVU363
 389:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1439              		.loc 1 389 24 is_stmt 0 view .LVU364
 1440 0030 4460     		str	r4, [r0, #4]
 390:Core/Src/main.c ****   htim1.Init.Period = 799;
 1441              		.loc 1 390 3 is_stmt 1 view .LVU365
 390:Core/Src/main.c ****   htim1.Init.Period = 799;
 1442              		.loc 1 390 26 is_stmt 0 view .LVU366
 1443 0032 8460     		str	r4, [r0, #8]
 391:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1444              		.loc 1 391 3 is_stmt 1 view .LVU367
 391:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1445              		.loc 1 391 21 is_stmt 0 view .LVU368
 1446 0034 40F21F33 		movw	r3, #799
 1447 0038 C360     		str	r3, [r0, #12]
 392:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1448              		.loc 1 392 3 is_stmt 1 view .LVU369
 392:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1449              		.loc 1 392 28 is_stmt 0 view .LVU370
 1450 003a 0461     		str	r4, [r0, #16]
 393:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1451              		.loc 1 393 3 is_stmt 1 view .LVU371
 393:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1452              		.loc 1 393 32 is_stmt 0 view .LVU372
 1453 003c 4461     		str	r4, [r0, #20]
 394:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1454              		.loc 1 394 3 is_stmt 1 view .LVU373
 394:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1455              		.loc 1 394 32 is_stmt 0 view .LVU374
 1456 003e 8461     		str	r4, [r0, #24]
 395:Core/Src/main.c ****   {
 1457              		.loc 1 395 3 is_stmt 1 view .LVU375
 395:Core/Src/main.c ****   {
 1458              		.loc 1 395 7 is_stmt 0 view .LVU376
 1459 0040 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1460              	.LVL122:
 395:Core/Src/main.c ****   {
 1461              		.loc 1 395 6 discriminator 1 view .LVU377
 1462 0044 0028     		cmp	r0, #0
 1463 0046 3ED1     		bne	.L102
 399:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1464              		.loc 1 399 3 is_stmt 1 view .LVU378
 399:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1465              		.loc 1 399 34 is_stmt 0 view .LVU379
 1466 0048 4FF48053 		mov	r3, #4096
 1467 004c 1293     		str	r3, [sp, #72]
 400:Core/Src/main.c ****   {
 1468              		.loc 1 400 3 is_stmt 1 view .LVU380
 400:Core/Src/main.c ****   {
 1469              		.loc 1 400 7 is_stmt 0 view .LVU381
 1470 004e 12A9     		add	r1, sp, #72
 1471 0050 2448     		ldr	r0, .L109
 1472 0052 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1473              	.LVL123:
 400:Core/Src/main.c ****   {
 1474              		.loc 1 400 6 discriminator 1 view .LVU382
 1475 0056 0028     		cmp	r0, #0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 45


 1476 0058 37D1     		bne	.L103
 404:Core/Src/main.c ****   {
 1477              		.loc 1 404 3 is_stmt 1 view .LVU383
 404:Core/Src/main.c ****   {
 1478              		.loc 1 404 7 is_stmt 0 view .LVU384
 1479 005a 2248     		ldr	r0, .L109
 1480 005c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1481              	.LVL124:
 404:Core/Src/main.c ****   {
 1482              		.loc 1 404 6 discriminator 1 view .LVU385
 1483 0060 0028     		cmp	r0, #0
 1484 0062 34D1     		bne	.L104
 408:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1485              		.loc 1 408 3 is_stmt 1 view .LVU386
 408:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1486              		.loc 1 408 37 is_stmt 0 view .LVU387
 1487 0064 0023     		movs	r3, #0
 1488 0066 1093     		str	r3, [sp, #64]
 409:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1489              		.loc 1 409 3 is_stmt 1 view .LVU388
 409:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1490              		.loc 1 409 33 is_stmt 0 view .LVU389
 1491 0068 1193     		str	r3, [sp, #68]
 410:Core/Src/main.c ****   {
 1492              		.loc 1 410 3 is_stmt 1 view .LVU390
 410:Core/Src/main.c ****   {
 1493              		.loc 1 410 7 is_stmt 0 view .LVU391
 1494 006a 10A9     		add	r1, sp, #64
 1495 006c 1D48     		ldr	r0, .L109
 1496 006e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1497              	.LVL125:
 410:Core/Src/main.c ****   {
 1498              		.loc 1 410 6 discriminator 1 view .LVU392
 1499 0072 0028     		cmp	r0, #0
 1500 0074 2DD1     		bne	.L105
 414:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1501              		.loc 1 414 3 is_stmt 1 view .LVU393
 414:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1502              		.loc 1 414 20 is_stmt 0 view .LVU394
 1503 0076 6023     		movs	r3, #96
 1504 0078 0993     		str	r3, [sp, #36]
 415:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1505              		.loc 1 415 3 is_stmt 1 view .LVU395
 415:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1506              		.loc 1 415 19 is_stmt 0 view .LVU396
 1507 007a 0022     		movs	r2, #0
 1508 007c 0A92     		str	r2, [sp, #40]
 416:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1509              		.loc 1 416 3 is_stmt 1 view .LVU397
 416:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1510              		.loc 1 416 24 is_stmt 0 view .LVU398
 1511 007e 0B92     		str	r2, [sp, #44]
 417:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1512              		.loc 1 417 3 is_stmt 1 view .LVU399
 417:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1513              		.loc 1 417 25 is_stmt 0 view .LVU400
 1514 0080 0C92     		str	r2, [sp, #48]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 46


 418:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1515              		.loc 1 418 3 is_stmt 1 view .LVU401
 418:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1516              		.loc 1 418 24 is_stmt 0 view .LVU402
 1517 0082 0D92     		str	r2, [sp, #52]
 419:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1518              		.loc 1 419 3 is_stmt 1 view .LVU403
 419:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1519              		.loc 1 419 25 is_stmt 0 view .LVU404
 1520 0084 0E92     		str	r2, [sp, #56]
 420:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1521              		.loc 1 420 3 is_stmt 1 view .LVU405
 420:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1522              		.loc 1 420 26 is_stmt 0 view .LVU406
 1523 0086 0F92     		str	r2, [sp, #60]
 421:Core/Src/main.c ****   {
 1524              		.loc 1 421 3 is_stmt 1 view .LVU407
 421:Core/Src/main.c ****   {
 1525              		.loc 1 421 7 is_stmt 0 view .LVU408
 1526 0088 09A9     		add	r1, sp, #36
 1527 008a 1648     		ldr	r0, .L109
 1528 008c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1529              	.LVL126:
 421:Core/Src/main.c ****   {
 1530              		.loc 1 421 6 discriminator 1 view .LVU409
 1531 0090 08BB     		cbnz	r0, .L106
 425:Core/Src/main.c ****   {
 1532              		.loc 1 425 3 is_stmt 1 view .LVU410
 425:Core/Src/main.c ****   {
 1533              		.loc 1 425 7 is_stmt 0 view .LVU411
 1534 0092 0422     		movs	r2, #4
 1535 0094 09A9     		add	r1, sp, #36
 1536 0096 1348     		ldr	r0, .L109
 1537 0098 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1538              	.LVL127:
 425:Core/Src/main.c ****   {
 1539              		.loc 1 425 6 discriminator 1 view .LVU412
 1540 009c E8B9     		cbnz	r0, .L107
 429:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1541              		.loc 1 429 3 is_stmt 1 view .LVU413
 429:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1542              		.loc 1 429 40 is_stmt 0 view .LVU414
 1543 009e 0023     		movs	r3, #0
 1544 00a0 0193     		str	r3, [sp, #4]
 430:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1545              		.loc 1 430 3 is_stmt 1 view .LVU415
 430:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1546              		.loc 1 430 41 is_stmt 0 view .LVU416
 1547 00a2 0293     		str	r3, [sp, #8]
 431:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1548              		.loc 1 431 3 is_stmt 1 view .LVU417
 431:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1549              		.loc 1 431 34 is_stmt 0 view .LVU418
 1550 00a4 0393     		str	r3, [sp, #12]
 432:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1551              		.loc 1 432 3 is_stmt 1 view .LVU419
 432:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 47


 1552              		.loc 1 432 33 is_stmt 0 view .LVU420
 1553 00a6 0493     		str	r3, [sp, #16]
 433:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1554              		.loc 1 433 3 is_stmt 1 view .LVU421
 433:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1555              		.loc 1 433 35 is_stmt 0 view .LVU422
 1556 00a8 0593     		str	r3, [sp, #20]
 434:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1557              		.loc 1 434 3 is_stmt 1 view .LVU423
 434:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1558              		.loc 1 434 38 is_stmt 0 view .LVU424
 1559 00aa 4FF40052 		mov	r2, #8192
 1560 00ae 0692     		str	r2, [sp, #24]
 435:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1561              		.loc 1 435 3 is_stmt 1 view .LVU425
 435:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1562              		.loc 1 435 40 is_stmt 0 view .LVU426
 1563 00b0 0893     		str	r3, [sp, #32]
 436:Core/Src/main.c ****   {
 1564              		.loc 1 436 3 is_stmt 1 view .LVU427
 436:Core/Src/main.c ****   {
 1565              		.loc 1 436 7 is_stmt 0 view .LVU428
 1566 00b2 01A9     		add	r1, sp, #4
 1567 00b4 0B48     		ldr	r0, .L109
 1568 00b6 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1569              	.LVL128:
 436:Core/Src/main.c ****   {
 1570              		.loc 1 436 6 discriminator 1 view .LVU429
 1571 00ba 80B9     		cbnz	r0, .L108
 443:Core/Src/main.c **** 
 1572              		.loc 1 443 3 is_stmt 1 view .LVU430
 1573 00bc 0948     		ldr	r0, .L109
 1574 00be FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1575              	.LVL129:
 445:Core/Src/main.c **** 
 1576              		.loc 1 445 1 is_stmt 0 view .LVU431
 1577 00c2 16B0     		add	sp, sp, #88
 1578              		.cfi_remember_state
 1579              		.cfi_def_cfa_offset 8
 1580              		@ sp needed
 1581 00c4 10BD     		pop	{r4, pc}
 1582              	.L102:
 1583              		.cfi_restore_state
 397:Core/Src/main.c ****   }
 1584              		.loc 1 397 5 is_stmt 1 view .LVU432
 1585 00c6 FFF7FEFF 		bl	Error_Handler
 1586              	.LVL130:
 1587              	.L103:
 402:Core/Src/main.c ****   }
 1588              		.loc 1 402 5 view .LVU433
 1589 00ca FFF7FEFF 		bl	Error_Handler
 1590              	.LVL131:
 1591              	.L104:
 406:Core/Src/main.c ****   }
 1592              		.loc 1 406 5 view .LVU434
 1593 00ce FFF7FEFF 		bl	Error_Handler
 1594              	.LVL132:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 48


 1595              	.L105:
 412:Core/Src/main.c ****   }
 1596              		.loc 1 412 5 view .LVU435
 1597 00d2 FFF7FEFF 		bl	Error_Handler
 1598              	.LVL133:
 1599              	.L106:
 423:Core/Src/main.c ****   }
 1600              		.loc 1 423 5 view .LVU436
 1601 00d6 FFF7FEFF 		bl	Error_Handler
 1602              	.LVL134:
 1603              	.L107:
 427:Core/Src/main.c ****   }
 1604              		.loc 1 427 5 view .LVU437
 1605 00da FFF7FEFF 		bl	Error_Handler
 1606              	.LVL135:
 1607              	.L108:
 438:Core/Src/main.c ****   }
 1608              		.loc 1 438 5 view .LVU438
 1609 00de FFF7FEFF 		bl	Error_Handler
 1610              	.LVL136:
 1611              	.L110:
 1612 00e2 00BF     		.align	2
 1613              	.L109:
 1614 00e4 00000000 		.word	htim1
 1615 00e8 002C0140 		.word	1073818624
 1616              		.cfi_endproc
 1617              	.LFE68:
 1619              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1620              		.align	1
 1621              		.syntax unified
 1622              		.thumb
 1623              		.thumb_func
 1625              	MX_TIM2_Init:
 1626              	.LFB69:
 453:Core/Src/main.c **** 
 1627              		.loc 1 453 1 view -0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 56
 1630              		@ frame_needed = 0, uses_anonymous_args = 0
 1631 0000 00B5     		push	{lr}
 1632              		.cfi_def_cfa_offset 4
 1633              		.cfi_offset 14, -4
 1634 0002 8FB0     		sub	sp, sp, #60
 1635              		.cfi_def_cfa_offset 64
 459:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1636              		.loc 1 459 3 view .LVU440
 459:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1637              		.loc 1 459 26 is_stmt 0 view .LVU441
 1638 0004 0023     		movs	r3, #0
 1639 0006 0A93     		str	r3, [sp, #40]
 1640 0008 0B93     		str	r3, [sp, #44]
 1641 000a 0C93     		str	r3, [sp, #48]
 1642 000c 0D93     		str	r3, [sp, #52]
 460:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1643              		.loc 1 460 3 is_stmt 1 view .LVU442
 460:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1644              		.loc 1 460 27 is_stmt 0 view .LVU443
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 49


 1645 000e 0893     		str	r3, [sp, #32]
 1646 0010 0993     		str	r3, [sp, #36]
 461:Core/Src/main.c **** 
 1647              		.loc 1 461 3 is_stmt 1 view .LVU444
 461:Core/Src/main.c **** 
 1648              		.loc 1 461 22 is_stmt 0 view .LVU445
 1649 0012 0193     		str	r3, [sp, #4]
 1650 0014 0293     		str	r3, [sp, #8]
 1651 0016 0393     		str	r3, [sp, #12]
 1652 0018 0493     		str	r3, [sp, #16]
 1653 001a 0593     		str	r3, [sp, #20]
 1654 001c 0693     		str	r3, [sp, #24]
 1655 001e 0793     		str	r3, [sp, #28]
 466:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 1656              		.loc 1 466 3 is_stmt 1 view .LVU446
 466:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 1657              		.loc 1 466 18 is_stmt 0 view .LVU447
 1658 0020 2248     		ldr	r0, .L125
 1659 0022 4FF08042 		mov	r2, #1073741824
 1660 0026 0260     		str	r2, [r0]
 467:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1661              		.loc 1 467 3 is_stmt 1 view .LVU448
 467:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1662              		.loc 1 467 24 is_stmt 0 view .LVU449
 1663 0028 4360     		str	r3, [r0, #4]
 468:Core/Src/main.c ****   htim2.Init.Period = 799;
 1664              		.loc 1 468 3 is_stmt 1 view .LVU450
 468:Core/Src/main.c ****   htim2.Init.Period = 799;
 1665              		.loc 1 468 26 is_stmt 0 view .LVU451
 1666 002a 8360     		str	r3, [r0, #8]
 469:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1667              		.loc 1 469 3 is_stmt 1 view .LVU452
 469:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1668              		.loc 1 469 21 is_stmt 0 view .LVU453
 1669 002c 40F21F32 		movw	r2, #799
 1670 0030 C260     		str	r2, [r0, #12]
 470:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1671              		.loc 1 470 3 is_stmt 1 view .LVU454
 470:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1672              		.loc 1 470 28 is_stmt 0 view .LVU455
 1673 0032 0361     		str	r3, [r0, #16]
 471:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1674              		.loc 1 471 3 is_stmt 1 view .LVU456
 471:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1675              		.loc 1 471 32 is_stmt 0 view .LVU457
 1676 0034 8361     		str	r3, [r0, #24]
 472:Core/Src/main.c ****   {
 1677              		.loc 1 472 3 is_stmt 1 view .LVU458
 472:Core/Src/main.c ****   {
 1678              		.loc 1 472 7 is_stmt 0 view .LVU459
 1679 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1680              	.LVL137:
 472:Core/Src/main.c ****   {
 1681              		.loc 1 472 6 discriminator 1 view .LVU460
 1682 003a 58BB     		cbnz	r0, .L119
 476:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1683              		.loc 1 476 3 is_stmt 1 view .LVU461
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 50


 476:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1684              		.loc 1 476 34 is_stmt 0 view .LVU462
 1685 003c 4FF48053 		mov	r3, #4096
 1686 0040 0A93     		str	r3, [sp, #40]
 477:Core/Src/main.c ****   {
 1687              		.loc 1 477 3 is_stmt 1 view .LVU463
 477:Core/Src/main.c ****   {
 1688              		.loc 1 477 7 is_stmt 0 view .LVU464
 1689 0042 0AA9     		add	r1, sp, #40
 1690 0044 1948     		ldr	r0, .L125
 1691 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1692              	.LVL138:
 477:Core/Src/main.c ****   {
 1693              		.loc 1 477 6 discriminator 1 view .LVU465
 1694 004a 28BB     		cbnz	r0, .L120
 481:Core/Src/main.c ****   {
 1695              		.loc 1 481 3 is_stmt 1 view .LVU466
 481:Core/Src/main.c ****   {
 1696              		.loc 1 481 7 is_stmt 0 view .LVU467
 1697 004c 1748     		ldr	r0, .L125
 1698 004e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1699              	.LVL139:
 481:Core/Src/main.c ****   {
 1700              		.loc 1 481 6 discriminator 1 view .LVU468
 1701 0052 18BB     		cbnz	r0, .L121
 485:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1702              		.loc 1 485 3 is_stmt 1 view .LVU469
 485:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1703              		.loc 1 485 37 is_stmt 0 view .LVU470
 1704 0054 0023     		movs	r3, #0
 1705 0056 0893     		str	r3, [sp, #32]
 486:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1706              		.loc 1 486 3 is_stmt 1 view .LVU471
 486:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1707              		.loc 1 486 33 is_stmt 0 view .LVU472
 1708 0058 0993     		str	r3, [sp, #36]
 487:Core/Src/main.c ****   {
 1709              		.loc 1 487 3 is_stmt 1 view .LVU473
 487:Core/Src/main.c ****   {
 1710              		.loc 1 487 7 is_stmt 0 view .LVU474
 1711 005a 08A9     		add	r1, sp, #32
 1712 005c 1348     		ldr	r0, .L125
 1713 005e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1714              	.LVL140:
 487:Core/Src/main.c ****   {
 1715              		.loc 1 487 6 discriminator 1 view .LVU475
 1716 0062 E8B9     		cbnz	r0, .L122
 491:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1717              		.loc 1 491 3 is_stmt 1 view .LVU476
 491:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1718              		.loc 1 491 20 is_stmt 0 view .LVU477
 1719 0064 6023     		movs	r3, #96
 1720 0066 0193     		str	r3, [sp, #4]
 492:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1721              		.loc 1 492 3 is_stmt 1 view .LVU478
 492:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1722              		.loc 1 492 19 is_stmt 0 view .LVU479
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 51


 1723 0068 0022     		movs	r2, #0
 1724 006a 0292     		str	r2, [sp, #8]
 493:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1725              		.loc 1 493 3 is_stmt 1 view .LVU480
 493:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1726              		.loc 1 493 24 is_stmt 0 view .LVU481
 1727 006c 0392     		str	r2, [sp, #12]
 494:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1728              		.loc 1 494 3 is_stmt 1 view .LVU482
 494:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1729              		.loc 1 494 24 is_stmt 0 view .LVU483
 1730 006e 0592     		str	r2, [sp, #20]
 495:Core/Src/main.c ****   {
 1731              		.loc 1 495 3 is_stmt 1 view .LVU484
 495:Core/Src/main.c ****   {
 1732              		.loc 1 495 7 is_stmt 0 view .LVU485
 1733 0070 01A9     		add	r1, sp, #4
 1734 0072 0E48     		ldr	r0, .L125
 1735 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1736              	.LVL141:
 495:Core/Src/main.c ****   {
 1737              		.loc 1 495 6 discriminator 1 view .LVU486
 1738 0078 A0B9     		cbnz	r0, .L123
 499:Core/Src/main.c ****   {
 1739              		.loc 1 499 3 is_stmt 1 view .LVU487
 499:Core/Src/main.c ****   {
 1740              		.loc 1 499 7 is_stmt 0 view .LVU488
 1741 007a 0422     		movs	r2, #4
 1742 007c 0DEB0201 		add	r1, sp, r2
 1743 0080 0A48     		ldr	r0, .L125
 1744 0082 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1745              	.LVL142:
 499:Core/Src/main.c ****   {
 1746              		.loc 1 499 6 discriminator 1 view .LVU489
 1747 0086 78B9     		cbnz	r0, .L124
 506:Core/Src/main.c **** 
 1748              		.loc 1 506 3 is_stmt 1 view .LVU490
 1749 0088 0848     		ldr	r0, .L125
 1750 008a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1751              	.LVL143:
 508:Core/Src/main.c **** 
 1752              		.loc 1 508 1 is_stmt 0 view .LVU491
 1753 008e 0FB0     		add	sp, sp, #60
 1754              		.cfi_remember_state
 1755              		.cfi_def_cfa_offset 4
 1756              		@ sp needed
 1757 0090 5DF804FB 		ldr	pc, [sp], #4
 1758              	.L119:
 1759              		.cfi_restore_state
 474:Core/Src/main.c ****   }
 1760              		.loc 1 474 5 is_stmt 1 view .LVU492
 1761 0094 FFF7FEFF 		bl	Error_Handler
 1762              	.LVL144:
 1763              	.L120:
 479:Core/Src/main.c ****   }
 1764              		.loc 1 479 5 view .LVU493
 1765 0098 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 52


 1766              	.LVL145:
 1767              	.L121:
 483:Core/Src/main.c ****   }
 1768              		.loc 1 483 5 view .LVU494
 1769 009c FFF7FEFF 		bl	Error_Handler
 1770              	.LVL146:
 1771              	.L122:
 489:Core/Src/main.c ****   }
 1772              		.loc 1 489 5 view .LVU495
 1773 00a0 FFF7FEFF 		bl	Error_Handler
 1774              	.LVL147:
 1775              	.L123:
 497:Core/Src/main.c ****   }
 1776              		.loc 1 497 5 view .LVU496
 1777 00a4 FFF7FEFF 		bl	Error_Handler
 1778              	.LVL148:
 1779              	.L124:
 501:Core/Src/main.c ****   }
 1780              		.loc 1 501 5 view .LVU497
 1781 00a8 FFF7FEFF 		bl	Error_Handler
 1782              	.LVL149:
 1783              	.L126:
 1784              		.align	2
 1785              	.L125:
 1786 00ac 00000000 		.word	htim2
 1787              		.cfi_endproc
 1788              	.LFE69:
 1790              		.section	.text.SystemClock_Config,"ax",%progbits
 1791              		.align	1
 1792              		.global	SystemClock_Config
 1793              		.syntax unified
 1794              		.thumb
 1795              		.thumb_func
 1797              	SystemClock_Config:
 1798              	.LFB66:
 209:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1799              		.loc 1 209 1 view -0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 72
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803 0000 10B5     		push	{r4, lr}
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 4, -8
 1806              		.cfi_offset 14, -4
 1807 0002 92B0     		sub	sp, sp, #72
 1808              		.cfi_def_cfa_offset 80
 210:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1809              		.loc 1 210 3 view .LVU499
 210:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1810              		.loc 1 210 22 is_stmt 0 view .LVU500
 1811 0004 08AC     		add	r4, sp, #32
 1812 0006 2822     		movs	r2, #40
 1813 0008 0021     		movs	r1, #0
 1814 000a 2046     		mov	r0, r4
 1815 000c FFF7FEFF 		bl	memset
 1816              	.LVL150:
 211:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 53


 1817              		.loc 1 211 3 is_stmt 1 view .LVU501
 211:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1818              		.loc 1 211 22 is_stmt 0 view .LVU502
 1819 0010 0023     		movs	r3, #0
 1820 0012 0393     		str	r3, [sp, #12]
 1821 0014 0493     		str	r3, [sp, #16]
 1822 0016 0593     		str	r3, [sp, #20]
 1823 0018 0693     		str	r3, [sp, #24]
 1824 001a 0793     		str	r3, [sp, #28]
 212:Core/Src/main.c **** 
 1825              		.loc 1 212 3 is_stmt 1 view .LVU503
 212:Core/Src/main.c **** 
 1826              		.loc 1 212 28 is_stmt 0 view .LVU504
 1827 001c 0093     		str	r3, [sp]
 1828 001e 0193     		str	r3, [sp, #4]
 1829 0020 0293     		str	r3, [sp, #8]
 217:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1830              		.loc 1 217 3 is_stmt 1 view .LVU505
 217:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1831              		.loc 1 217 36 is_stmt 0 view .LVU506
 1832 0022 0223     		movs	r3, #2
 1833 0024 0893     		str	r3, [sp, #32]
 218:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1834              		.loc 1 218 3 is_stmt 1 view .LVU507
 218:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1835              		.loc 1 218 30 is_stmt 0 view .LVU508
 1836 0026 0122     		movs	r2, #1
 1837 0028 0C92     		str	r2, [sp, #48]
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1838              		.loc 1 219 3 is_stmt 1 view .LVU509
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1839              		.loc 1 219 41 is_stmt 0 view .LVU510
 1840 002a 1022     		movs	r2, #16
 1841 002c 0D92     		str	r2, [sp, #52]
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 1842              		.loc 1 220 3 is_stmt 1 view .LVU511
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 1843              		.loc 1 220 34 is_stmt 0 view .LVU512
 1844 002e 0F93     		str	r3, [sp, #60]
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 1845              		.loc 1 221 3 is_stmt 1 view .LVU513
 222:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1846              		.loc 1 222 3 view .LVU514
 222:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1847              		.loc 1 222 32 is_stmt 0 view .LVU515
 1848 0030 4FF48013 		mov	r3, #1048576
 1849 0034 1193     		str	r3, [sp, #68]
 223:Core/Src/main.c ****   {
 1850              		.loc 1 223 3 is_stmt 1 view .LVU516
 223:Core/Src/main.c ****   {
 1851              		.loc 1 223 7 is_stmt 0 view .LVU517
 1852 0036 2046     		mov	r0, r4
 1853 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1854              	.LVL151:
 223:Core/Src/main.c ****   {
 1855              		.loc 1 223 6 discriminator 1 view .LVU518
 1856 003c A8B9     		cbnz	r0, .L132
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 54


 230:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1857              		.loc 1 230 3 is_stmt 1 view .LVU519
 230:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1858              		.loc 1 230 31 is_stmt 0 view .LVU520
 1859 003e 0F23     		movs	r3, #15
 1860 0040 0393     		str	r3, [sp, #12]
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1861              		.loc 1 232 3 is_stmt 1 view .LVU521
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1862              		.loc 1 232 34 is_stmt 0 view .LVU522
 1863 0042 0223     		movs	r3, #2
 1864 0044 0493     		str	r3, [sp, #16]
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1865              		.loc 1 233 3 is_stmt 1 view .LVU523
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1866              		.loc 1 233 35 is_stmt 0 view .LVU524
 1867 0046 0021     		movs	r1, #0
 1868 0048 0591     		str	r1, [sp, #20]
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1869              		.loc 1 234 3 is_stmt 1 view .LVU525
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1870              		.loc 1 234 36 is_stmt 0 view .LVU526
 1871 004a 0691     		str	r1, [sp, #24]
 235:Core/Src/main.c **** 
 1872              		.loc 1 235 3 is_stmt 1 view .LVU527
 235:Core/Src/main.c **** 
 1873              		.loc 1 235 36 is_stmt 0 view .LVU528
 1874 004c 0791     		str	r1, [sp, #28]
 237:Core/Src/main.c ****   {
 1875              		.loc 1 237 3 is_stmt 1 view .LVU529
 237:Core/Src/main.c ****   {
 1876              		.loc 1 237 7 is_stmt 0 view .LVU530
 1877 004e 03A8     		add	r0, sp, #12
 1878 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1879              	.LVL152:
 237:Core/Src/main.c ****   {
 1880              		.loc 1 237 6 discriminator 1 view .LVU531
 1881 0054 58B9     		cbnz	r0, .L133
 241:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 1882              		.loc 1 241 3 is_stmt 1 view .LVU532
 241:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 1883              		.loc 1 241 38 is_stmt 0 view .LVU533
 1884 0056 0223     		movs	r3, #2
 1885 0058 0093     		str	r3, [sp]
 242:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1886              		.loc 1 242 3 is_stmt 1 view .LVU534
 242:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1887              		.loc 1 242 35 is_stmt 0 view .LVU535
 1888 005a 0023     		movs	r3, #0
 1889 005c 0293     		str	r3, [sp, #8]
 243:Core/Src/main.c ****   {
 1890              		.loc 1 243 3 is_stmt 1 view .LVU536
 243:Core/Src/main.c ****   {
 1891              		.loc 1 243 7 is_stmt 0 view .LVU537
 1892 005e 6846     		mov	r0, sp
 1893 0060 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1894              	.LVL153:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 55


 243:Core/Src/main.c ****   {
 1895              		.loc 1 243 6 discriminator 1 view .LVU538
 1896 0064 28B9     		cbnz	r0, .L134
 247:Core/Src/main.c **** 
 1897              		.loc 1 247 1 view .LVU539
 1898 0066 12B0     		add	sp, sp, #72
 1899              		.cfi_remember_state
 1900              		.cfi_def_cfa_offset 8
 1901              		@ sp needed
 1902 0068 10BD     		pop	{r4, pc}
 1903              	.L132:
 1904              		.cfi_restore_state
 225:Core/Src/main.c ****   }
 1905              		.loc 1 225 5 is_stmt 1 view .LVU540
 1906 006a FFF7FEFF 		bl	Error_Handler
 1907              	.LVL154:
 1908              	.L133:
 239:Core/Src/main.c ****   }
 1909              		.loc 1 239 5 view .LVU541
 1910 006e FFF7FEFF 		bl	Error_Handler
 1911              	.LVL155:
 1912              	.L134:
 245:Core/Src/main.c ****   }
 1913              		.loc 1 245 5 view .LVU542
 1914 0072 FFF7FEFF 		bl	Error_Handler
 1915              	.LVL156:
 1916              		.cfi_endproc
 1917              	.LFE66:
 1919              		.section	.text.main,"ax",%progbits
 1920              		.align	1
 1921              		.global	main
 1922              		.syntax unified
 1923              		.thumb
 1924              		.thumb_func
 1926              	main:
 1927              	.LFB65:
 104:Core/Src/main.c **** 
 1928              		.loc 1 104 1 view -0
 1929              		.cfi_startproc
 1930              		@ args = 0, pretend = 0, frame = 0
 1931              		@ frame_needed = 0, uses_anonymous_args = 0
 1932 0000 10B5     		push	{r4, lr}
 1933              		.cfi_def_cfa_offset 8
 1934              		.cfi_offset 4, -8
 1935              		.cfi_offset 14, -4
 113:Core/Src/main.c **** 
 1936              		.loc 1 113 3 view .LVU544
 1937 0002 FFF7FEFF 		bl	HAL_Init
 1938              	.LVL157:
 120:Core/Src/main.c **** 
 1939              		.loc 1 120 3 view .LVU545
 1940 0006 FFF7FEFF 		bl	SystemClock_Config
 1941              	.LVL158:
 127:Core/Src/main.c ****   MX_DMA_Init();
 1942              		.loc 1 127 3 view .LVU546
 1943 000a FFF7FEFF 		bl	MX_GPIO_Init
 1944              	.LVL159:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 56


 128:Core/Src/main.c ****   MX_ADC1_Init();
 1945              		.loc 1 128 3 view .LVU547
 1946 000e FFF7FEFF 		bl	MX_DMA_Init
 1947              	.LVL160:
 129:Core/Src/main.c ****   MX_TIM1_Init();
 1948              		.loc 1 129 3 view .LVU548
 1949 0012 FFF7FEFF 		bl	MX_ADC1_Init
 1950              	.LVL161:
 130:Core/Src/main.c ****   MX_TIM2_Init();
 1951              		.loc 1 130 3 view .LVU549
 1952 0016 FFF7FEFF 		bl	MX_TIM1_Init
 1953              	.LVL162:
 131:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1954              		.loc 1 131 3 view .LVU550
 1955 001a FFF7FEFF 		bl	MX_TIM2_Init
 1956              	.LVL163:
 133:Core/Src/main.c ****   HAL_Delay(300);
 1957              		.loc 1 133 3 view .LVU551
 1958 001e 324C     		ldr	r4, .L143
 1959 0020 0122     		movs	r2, #1
 1960 0022 4FF40061 		mov	r1, #2048
 1961 0026 2046     		mov	r0, r4
 1962 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1963              	.LVL164:
 134:Core/Src/main.c ****   HAL_GPIO_WritePin(BUZZ_GPIO_Port, BUZZ_Pin, GPIO_PIN_RESET);
 1964              		.loc 1 134 3 view .LVU552
 1965 002c 4FF49670 		mov	r0, #300
 1966 0030 FFF7FEFF 		bl	HAL_Delay
 1967              	.LVL165:
 135:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_ON_GPIO_Port, LED_ON_Pin, GPIO_PIN_SET);
 1968              		.loc 1 135 3 view .LVU553
 1969 0034 0022     		movs	r2, #0
 1970 0036 4FF40061 		mov	r1, #2048
 1971 003a 2046     		mov	r0, r4
 1972 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1973              	.LVL166:
 136:Core/Src/main.c ****   HAL_GPIO_WritePin(IR_EN_GPIO_Port, IR_EN_Pin, GPIO_PIN_SET);
 1974              		.loc 1 136 3 view .LVU554
 1975 0040 0122     		movs	r2, #1
 1976 0042 4FF48061 		mov	r1, #1024
 1977 0046 2046     		mov	r0, r4
 1978 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1979              	.LVL167:
 137:Core/Src/main.c **** 
 1980              		.loc 1 137 3 view .LVU555
 1981 004c 0122     		movs	r2, #1
 1982 004e 2021     		movs	r1, #32
 1983 0050 2046     		mov	r0, r4
 1984 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1985              	.LVL168:
 139:Core/Src/main.c **** 
 1986              		.loc 1 139 3 view .LVU556
 1987 0056 0922     		movs	r2, #9
 1988 0058 2449     		ldr	r1, .L143+4
 1989 005a 2548     		ldr	r0, .L143+8
 1990 005c FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1991              	.LVL169:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 57


 141:Core/Src/main.c ****   //M_SetSpeed(500, 500, FORWARD, FORWARD);
 1992              		.loc 1 141 3 view .LVU557
 1993 0060 FFF7FEFF 		bl	M_Init
 1994              	.LVL170:
 145:Core/Src/main.c ****   HAL_Delay(1000);
 1995              		.loc 1 145 3 view .LVU558
 1996              	.L136:
 145:Core/Src/main.c ****   HAL_Delay(1000);
 1997              		.loc 1 145 9 discriminator 1 view .LVU559
 145:Core/Src/main.c ****   HAL_Delay(1000);
 1998              		.loc 1 145 10 is_stmt 0 discriminator 1 view .LVU560
 1999 0064 0121     		movs	r1, #1
 2000 0066 2348     		ldr	r0, .L143+12
 2001 0068 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2002              	.LVL171:
 145:Core/Src/main.c ****   HAL_Delay(1000);
 2003              		.loc 1 145 9 discriminator 1 view .LVU561
 2004 006c 0028     		cmp	r0, #0
 2005 006e F9D0     		beq	.L136
 146:Core/Src/main.c ****   /* USER CODE END 2 */
 2006              		.loc 1 146 3 is_stmt 1 view .LVU562
 2007 0070 4FF47A70 		mov	r0, #1000
 2008 0074 FFF7FEFF 		bl	HAL_Delay
 2009              	.LVL172:
 2010 0078 0AE0     		b	.L140
 2011              	.L138:
 158:Core/Src/main.c ****       }else{
 2012              		.loc 1 158 9 view .LVU563
 2013 007a 0122     		movs	r2, #1
 2014 007c 4FF48071 		mov	r1, #256
 2015 0080 1948     		ldr	r0, .L143
 2016 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2017              	.LVL173:
 2018              	.L137:
 164:Core/Src/main.c ****       M_Disable();
 2019              		.loc 1 164 5 view .LVU564
 164:Core/Src/main.c ****       M_Disable();
 2020              		.loc 1 164 8 is_stmt 0 view .LVU565
 2021 0086 0121     		movs	r1, #1
 2022 0088 1A48     		ldr	r0, .L143+12
 2023 008a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2024              	.LVL174:
 164:Core/Src/main.c ****       M_Disable();
 2025              		.loc 1 164 7 discriminator 1 view .LVU566
 2026 008e D0B9     		cbnz	r0, .L142
 2027              	.L140:
 151:Core/Src/main.c ****   {
 2028              		.loc 1 151 3 is_stmt 1 view .LVU567
 153:Core/Src/main.c ****       adc_done_flag = false;
 2029              		.loc 1 153 5 view .LVU568
 153:Core/Src/main.c ****       adc_done_flag = false;
 2030              		.loc 1 153 8 is_stmt 0 view .LVU569
 2031 0090 194B     		ldr	r3, .L143+16
 2032 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 153:Core/Src/main.c ****       adc_done_flag = false;
 2033              		.loc 1 153 7 view .LVU570
 2034 0094 002B     		cmp	r3, #0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 58


 2035 0096 F6D0     		beq	.L137
 154:Core/Src/main.c ****       Robot_Control();
 2036              		.loc 1 154 7 is_stmt 1 view .LVU571
 154:Core/Src/main.c ****       Robot_Control();
 2037              		.loc 1 154 21 is_stmt 0 view .LVU572
 2038 0098 174B     		ldr	r3, .L143+16
 2039 009a 0022     		movs	r2, #0
 2040 009c 1A70     		strb	r2, [r3]
 155:Core/Src/main.c ****       HAL_ADC_Start_DMA(&hadc1, adc_buffer, 9);
 2041              		.loc 1 155 7 is_stmt 1 view .LVU573
 2042 009e FFF7FEFF 		bl	Robot_Control
 2043              	.LVL175:
 156:Core/Src/main.c ****       if(Get_Line() == 0 || Get_Line() == 255){
 2044              		.loc 1 156 7 view .LVU574
 2045 00a2 0922     		movs	r2, #9
 2046 00a4 1149     		ldr	r1, .L143+4
 2047 00a6 1248     		ldr	r0, .L143+8
 2048 00a8 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 2049              	.LVL176:
 157:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_ACT_GPIO_Port, LED_ACT_Pin, GPIO_PIN_SET);
 2050              		.loc 1 157 7 view .LVU575
 157:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_ACT_GPIO_Port, LED_ACT_Pin, GPIO_PIN_SET);
 2051              		.loc 1 157 10 is_stmt 0 view .LVU576
 2052 00ac FFF7FEFF 		bl	Get_Line
 2053              	.LVL177:
 157:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_ACT_GPIO_Port, LED_ACT_Pin, GPIO_PIN_SET);
 2054              		.loc 1 157 9 discriminator 1 view .LVU577
 2055 00b0 0028     		cmp	r0, #0
 2056 00b2 E2D0     		beq	.L138
 157:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_ACT_GPIO_Port, LED_ACT_Pin, GPIO_PIN_SET);
 2057              		.loc 1 157 26 discriminator 1 view .LVU578
 2058 00b4 FF28     		cmp	r0, #255
 2059 00b6 E0D0     		beq	.L138
 160:Core/Src/main.c ****       }
 2060              		.loc 1 160 9 is_stmt 1 view .LVU579
 2061 00b8 0022     		movs	r2, #0
 2062 00ba 4FF48071 		mov	r1, #256
 2063 00be 0A48     		ldr	r0, .L143
 2064 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2065              	.LVL178:
 2066 00c4 DFE7     		b	.L137
 2067              	.L142:
 165:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_ON_GPIO_Port, LED_ON_Pin, GPIO_PIN_RESET);
 2068              		.loc 1 165 7 view .LVU580
 2069 00c6 FFF7FEFF 		bl	M_Disable
 2070              	.LVL179:
 166:Core/Src/main.c ****       HAL_GPIO_WritePin(IR_EN_GPIO_Port, IR_EN_Pin, GPIO_PIN_RESET);
 2071              		.loc 1 166 7 view .LVU581
 2072 00ca 074C     		ldr	r4, .L143
 2073 00cc 0022     		movs	r2, #0
 2074 00ce 4FF48061 		mov	r1, #1024
 2075 00d2 2046     		mov	r0, r4
 2076 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2077              	.LVL180:
 167:Core/Src/main.c ****       break;
 2078              		.loc 1 167 7 view .LVU582
 2079 00d8 0022     		movs	r2, #0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 59


 2080 00da 2021     		movs	r1, #32
 2081 00dc 2046     		mov	r0, r4
 2082 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 2083              	.LVL181:
 168:Core/Src/main.c ****     }
 2084              		.loc 1 168 7 view .LVU583
 202:Core/Src/main.c **** 
 2085              		.loc 1 202 1 is_stmt 0 view .LVU584
 2086 00e2 0020     		movs	r0, #0
 2087 00e4 10BD     		pop	{r4, pc}
 2088              	.L144:
 2089 00e6 00BF     		.align	2
 2090              	.L143:
 2091 00e8 000C0140 		.word	1073810432
 2092 00ec 00000000 		.word	adc_buffer
 2093 00f0 00000000 		.word	hadc1
 2094 00f4 00080140 		.word	1073809408
 2095 00f8 00000000 		.word	adc_done_flag
 2096              		.cfi_endproc
 2097              	.LFE65:
 2099              		.global	adc_done_flag
 2100              		.section	.bss.adc_done_flag,"aw",%nobits
 2103              	adc_done_flag:
 2104 0000 00       		.space	1
 2105              		.global	lfspeed
 2106              		.section	.data.lfspeed,"aw"
 2107              		.align	2
 2110              	lfspeed:
 2111 0000 E9010000 		.word	489
 2112              		.global	rsp
 2113              		.section	.bss.rsp,"aw",%nobits
 2114              		.align	2
 2117              	rsp:
 2118 0000 00000000 		.space	4
 2119              		.global	lsp
 2120              		.section	.bss.lsp,"aw",%nobits
 2121              		.align	2
 2124              	lsp:
 2125 0000 00000000 		.space	4
 2126              		.global	error
 2127              		.section	.bss.error,"aw",%nobits
 2128              		.align	2
 2131              	error:
 2132 0000 00000000 		.space	4
 2133              		.global	PIDvalue
 2134              		.section	.bss.PIDvalue,"aw",%nobits
 2135              		.align	2
 2138              	PIDvalue:
 2139 0000 00000000 		.space	4
 2140              		.global	previousError
 2141              		.section	.bss.previousError,"aw",%nobits
 2142              		.align	2
 2145              	previousError:
 2146 0000 00000000 		.space	4
 2147              		.global	I
 2148              		.section	.bss.I,"aw",%nobits
 2149              		.align	2
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 60


 2152              	I:
 2153 0000 00000000 		.space	4
 2154              		.global	D
 2155              		.section	.bss.D,"aw",%nobits
 2156              		.align	2
 2159              	D:
 2160 0000 00000000 		.space	4
 2161              		.global	P
 2162              		.section	.bss.P,"aw",%nobits
 2163              		.align	2
 2166              	P:
 2167 0000 00000000 		.space	4
 2168              		.global	position
 2169              		.section	.bss.position,"aw",%nobits
 2170              		.align	1
 2173              	position:
 2174 0000 0000     		.space	2
 2175              		.global	Dvalue
 2176              		.section	.bss.Dvalue,"aw",%nobits
 2177              		.align	2
 2180              	Dvalue:
 2181 0000 00000000 		.space	4
 2182              		.global	Ivalue
 2183              		.section	.bss.Ivalue,"aw",%nobits
 2184              		.align	2
 2187              	Ivalue:
 2188 0000 00000000 		.space	4
 2189              		.global	Pvalue
 2190              		.section	.bss.Pvalue,"aw",%nobits
 2191              		.align	2
 2194              	Pvalue:
 2195 0000 00000000 		.space	4
 2196              		.global	Kdfinal
 2197              		.section	.bss.Kdfinal,"aw",%nobits
 2200              	Kdfinal:
 2201 0000 00       		.space	1
 2202              		.global	Kifinal
 2203              		.section	.bss.Kifinal,"aw",%nobits
 2206              	Kifinal:
 2207 0000 00       		.space	1
 2208              		.global	Kpfinal
 2209              		.section	.bss.Kpfinal,"aw",%nobits
 2212              	Kpfinal:
 2213 0000 00       		.space	1
 2214              		.global	multiD
 2215              		.section	.data.multiD,"aw"
 2218              	multiD:
 2219 0000 01       		.byte	1
 2220              		.global	multiI
 2221              		.section	.data.multiI,"aw"
 2224              	multiI:
 2225 0000 01       		.byte	1
 2226              		.global	multiP
 2227              		.section	.data.multiP,"aw"
 2230              	multiP:
 2231 0000 01       		.byte	1
 2232              		.global	Kd
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 61


 2233              		.section	.bss.Kd,"aw",%nobits
 2234              		.align	2
 2237              	Kd:
 2238 0000 00000000 		.space	4
 2239              		.global	Ki
 2240              		.section	.bss.Ki,"aw",%nobits
 2241              		.align	2
 2244              	Ki:
 2245 0000 00000000 		.space	4
 2246              		.global	Kp
 2247              		.section	.bss.Kp,"aw",%nobits
 2248              		.align	2
 2251              	Kp:
 2252 0000 00000000 		.space	4
 2253              		.global	adc_buffer
 2254              		.section	.bss.adc_buffer,"aw",%nobits
 2255              		.align	2
 2258              	adc_buffer:
 2259 0000 00000000 		.space	36
 2259      00000000 
 2259      00000000 
 2259      00000000 
 2259      00000000 
 2260              		.global	htim2
 2261              		.section	.bss.htim2,"aw",%nobits
 2262              		.align	2
 2265              	htim2:
 2266 0000 00000000 		.space	72
 2266      00000000 
 2266      00000000 
 2266      00000000 
 2266      00000000 
 2267              		.global	htim1
 2268              		.section	.bss.htim1,"aw",%nobits
 2269              		.align	2
 2272              	htim1:
 2273 0000 00000000 		.space	72
 2273      00000000 
 2273      00000000 
 2273      00000000 
 2273      00000000 
 2274              		.global	hdma_adc1
 2275              		.section	.bss.hdma_adc1,"aw",%nobits
 2276              		.align	2
 2279              	hdma_adc1:
 2280 0000 00000000 		.space	68
 2280      00000000 
 2280      00000000 
 2280      00000000 
 2280      00000000 
 2281              		.global	hadc1
 2282              		.section	.bss.hadc1,"aw",%nobits
 2283              		.align	2
 2286              	hadc1:
 2287 0000 00000000 		.space	48
 2287      00000000 
 2287      00000000 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 62


 2287      00000000 
 2287      00000000 
 2288              		.global	BLACK
 2289              		.section	.rodata.BLACK,"a"
 2290              		.align	2
 2293              	BLACK:
 2294 0000 300F     		.short	3888
 2295 0002 490F     		.short	3913
 2296 0004 340F     		.short	3892
 2297 0006 400F     		.short	3904
 2298 0008 430F     		.short	3907
 2299 000a 490F     		.short	3913
 2300 000c 4C0F     		.short	3916
 2301 000e 500F     		.short	3920
 2302              		.global	WHITE
 2303              		.section	.rodata.WHITE,"a"
 2304              		.align	2
 2307              	WHITE:
 2308 0000 F10B     		.short	3057
 2309 0002 D10A     		.short	2769
 2310 0004 CC0A     		.short	2764
 2311 0006 FD0B     		.short	3069
 2312 0008 470B     		.short	2887
 2313 000a B80B     		.short	3000
 2314 000c 860B     		.short	2950
 2315 000e CC0B     		.short	3020
 2316              		.text
 2317              	.Letext0:
 2318              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f100xb.h"
 2319              		.file 4 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/ma
 2320              		.file 5 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/sy
 2321              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2322              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2323              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2324              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2325              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2326              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2327              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2328              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2329              		.file 14 "Core/Inc/motor.h"
 2330              		.file 15 "Core/Inc/main.h"
 2331              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 2332              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 2333              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2334              		.file 19 "C:/Program Files (x86)/Arm GNU Toolchain arm-none-eabi/14.2 rel1/arm-none-eabi/include/m
 2335              		.file 20 "<built-in>"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 63


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:143    .text.MX_GPIO_Init:00000080 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:151    .text.MX_DMA_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:156    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:201    .text.MX_DMA_Init:00000030 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:206    .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:212    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:293    .text.HAL_ADC_ConvCpltCallback:00000060 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2103   .bss.adc_done_flag:00000000 adc_done_flag
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2258   .bss.adc_buffer:00000000 adc_buffer
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:307    .text.Enter_Sleep:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:313    .text.Enter_Sleep:00000000 Enter_Sleep
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:356    .text.Enter_Sleep:00000038 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:361    .text.Get_Line:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:367    .text.Get_Line:00000000 Get_Line
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:474    .text.Get_Line:00000070 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2293   .rodata.BLACK:00000000 BLACK
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2307   .rodata.WHITE:00000000 WHITE
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:482    .text.PID_Linefollow:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:488    .text.PID_Linefollow:00000000 PID_Linefollow
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:795    .text.PID_Linefollow:000001b0 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2166   .bss.P:00000000 P
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2152   .bss.I:00000000 I
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2145   .bss.previousError:00000000 previousError
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2159   .bss.D:00000000 D
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2251   .bss.Kp:00000000 Kp
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2230   .data.multiP:00000000 multiP
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2194   .bss.Pvalue:00000000 Pvalue
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2244   .bss.Ki:00000000 Ki
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2224   .data.multiI:00000000 multiI
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2187   .bss.Ivalue:00000000 Ivalue
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2237   .bss.Kd:00000000 Kd
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2218   .data.multiD:00000000 multiD
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2180   .bss.Dvalue:00000000 Dvalue
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2110   .data.lfspeed:00000000 lfspeed
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2124   .bss.lsp:00000000 lsp
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2117   .bss.rsp:00000000 rsp
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:817    .text.Normalize_Sensors:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:823    .text.Normalize_Sensors:00000000 Normalize_Sensors
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:890    .text.Normalize_Sensors:00000038 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:896    .text.Read_Line:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:902    .text.Read_Line:00000000 Read_Line
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:982    .text.Read_Line:00000038 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:987    .text.Robot_Control:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:993    .text.Robot_Control:00000000 Robot_Control
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1088   .text.Robot_Control:00000070 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2173   .bss.position:00000000 position
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2131   .bss.error:00000000 error
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2286   .bss.hadc1:00000000 hadc1
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1098   .text.Error_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1104   .text.Error_Handler:00000000 Error_Handler
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1136   .text.MX_ADC1_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1141   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1383   .text.MX_ADC1_Init:000000fc $d
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 64


C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1389   .text.MX_TIM1_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1394   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1614   .text.MX_TIM1_Init:000000e4 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2272   .bss.htim1:00000000 htim1
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1620   .text.MX_TIM2_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1625   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1786   .text.MX_TIM2_Init:000000ac $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2265   .bss.htim2:00000000 htim2
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1791   .text.SystemClock_Config:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1797   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1920   .text.main:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:1926   .text.main:00000000 main
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2091   .text.main:000000e8 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2104   .bss.adc_done_flag:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2107   .data.lfspeed:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2114   .bss.rsp:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2121   .bss.lsp:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2128   .bss.error:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2138   .bss.PIDvalue:00000000 PIDvalue
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2135   .bss.PIDvalue:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2142   .bss.previousError:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2149   .bss.I:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2156   .bss.D:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2163   .bss.P:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2170   .bss.position:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2177   .bss.Dvalue:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2184   .bss.Ivalue:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2191   .bss.Pvalue:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2200   .bss.Kdfinal:00000000 Kdfinal
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2201   .bss.Kdfinal:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2206   .bss.Kifinal:00000000 Kifinal
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2207   .bss.Kifinal:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2212   .bss.Kpfinal:00000000 Kpfinal
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2213   .bss.Kpfinal:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2234   .bss.Kd:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2241   .bss.Ki:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2248   .bss.Kp:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2255   .bss.adc_buffer:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2262   .bss.htim2:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2269   .bss.htim1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2279   .bss.hdma_adc1:00000000 hdma_adc1
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2276   .bss.hdma_adc1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2283   .bss.hadc1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2290   .rodata.BLACK:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s:2304   .rodata.WHITE:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_ui2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
__aeabi_f2d
__aeabi_dcmplt
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccQpW4Gj.s 			page 65


M_Disable
__aeabi_i2d
__aeabi_dsub
__aeabi_dcmpgt
pow
__aeabi_fadd
__aeabi_i2f
__aeabi_fsub
__aeabi_f2iz
M_SetSpeed
HAL_ADC_Start_DMA
HAL_ADC_Init
HAL_ADC_ConfigChannel
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_Delay
M_Init
HAL_GPIO_ReadPin
